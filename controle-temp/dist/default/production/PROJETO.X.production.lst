

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Nov 29 18:27:28 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  001702                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _tBase
    78  001702  00                 	db	0
    79  001703  0C                 	db	12
    80  001704  42                 	db	66
    81                           
    82                           ;initializer for _B
    83  001705  EA                 	db	234
    84  001706  FF                 	db	255
    85  001707  BF                 	db	191
    86                           
    87                           ;initializer for _A
    88  001708  00                 	db	0
    89  001709  00                 	db	0
    90  00170A  40                 	db	64
    91  0000                     _CCPR1L	set	4030
    92  0000                     _ADRESL	set	4035
    93  0000                     _TRISE	set	3990
    94  0000                     _PORTCbits	set	3970
    95  0000                     _ADCON2bits	set	4032
    96  0000                     _IPR1bits	set	3999
    97  0000                     _PIE1bits	set	3997
    98  0000                     _IPR2bits	set	4002
    99  0000                     _PIE2bits	set	4000
   100  0000                     _T3CONbits	set	4017
   101  0000                     _TRISA	set	3986
   102  0000                     _INTCONbits	set	4082
   103  0000                     _RCONbits	set	4048
   104  0000                     _PR2	set	4043
   105  0000                     _T2CONbits	set	4042
   106  0000                     _CCP1CONbits	set	4029
   107  0000                     _TRISC	set	3988
   108  0000                     _PIR1bits	set	3998
   109  0000                     _TMR3L	set	4018
   110  0000                     _TMR3H	set	4019
   111  0000                     _ADCON1bits	set	4033
   112  0000                     _ADCON0bits	set	4034
   113  0000                     _PIR2bits	set	4001
   114  0000                     _LATEbits	set	3981
   115  0000                     _TRISEbits	set	3990
   116  0000                     _TRISD	set	3989
   117  0000                     _PORTD	set	3971
   118  0000                     _ADRESH	set	4036
   119                           
   120                           	psect	smallconst
   121  000800                     __psmallconst:
   122                           	opt stack 0
   123  000800  00                 	db	0
   124  000801                     STR_4:
   125                           
   126                           ; BSR set to: 0
   127  000801  54                 	db	84	;'T'
   128  000802  2E                 	db	46
   129  000803  4C                 	db	76	;'L'
   130  000804  49                 	db	73	;'I'
   131  000805  44                 	db	68	;'D'
   132  000806  41                 	db	65	;'A'
   133  000807  3A                 	db	58	;':'
   134  000808  00                 	db	0
   135  000809                     STR_1:
   136                           
   137                           ; BSR set to: 0
   138  000809  54                 	db	84	;'T'
   139  00080A  2E                 	db	46
   140  00080B  52                 	db	82	;'R'
   141  00080C  45                 	db	69	;'E'
   142  00080D  46                 	db	70	;'F'
   143  00080E  3A                 	db	58	;':'
   144  00080F  00                 	db	0
   145  000810                     STR_3:
   146                           
   147                           ; BSR set to: 0
   148  000810  20                 	db	32
   149  000811  20                 	db	32
   150  000812  44                 	db	68	;'D'
   151  000813  43                 	db	67	;'C'
   152  000814  3A                 	db	58	;':'
   153  000815  00                 	db	0
   154  000816                     STR_6:
   155                           
   156                           ; BSR set to: 0
   157  000816  20                 	db	32
   158  000817  00                 	db	0
   159  000818                     STR_7:
   160                           
   161                           ; BSR set to: 0
   162  000818  25                 	db	37
   163  000819  00                 	db	0
   164  00081A                     STR_2:
   165                           
   166                           ; BSR set to: 0
   167  00081A  2E                 	db	46
   168  00081B  00                 	db	0
   169  0000                     
   170                           ; #config settings
   171  00081C  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	cinit
   174  001552                     __pcinit:
   175                           	opt stack 0
   176  001552                     start_initialization:
   177                           	opt stack 0
   178  001552                     __initialization:
   179                           	opt stack 0
   180                           
   181                           ; Initialize objects allocated to BANK0 (9 bytes)
   182                           ; load TBLPTR registers with __pidataBANK0
   183  001552  0E02               	movlw	low __pidataBANK0
   184  001554  6EF6               	movwf	tblptrl,c
   185  001556  0E17               	movlw	high __pidataBANK0
   186  001558  6EF7               	movwf	tblptrh,c
   187  00155A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   188  00155C  6EF8               	movwf	tblptru,c
   189  00155E  EE00  F0A3         	lfsr	0,__pdataBANK0
   190  001562  EE10 F009          	lfsr	1,9
   191  001566                     copy_data0:
   192  001566  0009               	tblrd		*+
   193  001568  CFF5 FFEE          	movff	tablat,postinc0
   194  00156C  50E5               	movf	postdec1,w,c
   195  00156E  50E1               	movf	fsr1l,w,c
   196  001570  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to BANK0 (32 bytes)
   199  001572  EE00  F083         	lfsr	0,__pbssBANK0
   200  001576  0E20               	movlw	32
   201  001578                     clear_0:
   202  001578  6AEE               	clrf	postinc0,c
   203  00157A  06E8               	decf	wreg,f,c
   204  00157C  E1FD               	bnz	clear_0
   205  00157E                     end_of_initialization:
   206                           	opt stack 0
   207  00157E                     __end_of__initialization:
   208                           	opt stack 0
   209  00157E  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  001580  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  001582  0E00               	movlw	low (__Lsmallconst shr (0+16))
   212  001584  6EF8               	movwf	tblptru,c
   213  001586  0E08               	movlw	high __Lsmallconst
   214  001588  6EF7               	movwf	tblptrh,c
   215  00158A  0100               	movlb	0
   216  00158C  EF0F  F004         	goto	_main	;jump to C main() function
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226                           	psect	bssBANK0
   227  000083                     __pbssBANK0:
   228                           	opt stack 0
   229  000083                     _convertDc:
   230                           	opt stack 0
   231  000083                     	ds	3
   232  000086                     _convertResTemp:
   233                           	opt stack 0
   234  000086                     	ds	3
   235  000089                     _sai_cont_ant:
   236                           	opt stack 0
   237  000089                     	ds	3
   238  00008C                     _sai_cont:
   239                           	opt stack 0
   240  00008C                     	ds	3
   241  00008F                     _erro_ant:
   242                           	opt stack 0
   243  00008F                     	ds	3
   244  000092                     _erro:
   245                           	opt stack 0
   246  000092                     	ds	3
   247  000095                     _convertPot:
   248                           	opt stack 0
   249  000095                     	ds	3
   250  000098                     _convertRes:
   251                           	opt stack 0
   252  000098                     	ds	3
   253  00009B                     _display:
   254                           	opt stack 0
   255  00009B                     	ds	2
   256  00009D                     _contRa3:
   257                           	opt stack 0
   258  00009D                     	ds	2
   259  00009F                     _flagAdFim:
   260                           	opt stack 0
   261  00009F                     	ds	2
   262  0000A1                     _dc:
   263                           	opt stack 0
   264  0000A1                     	ds	2
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	dataBANK0
   275  0000A3                     __pdataBANK0:
   276                           	opt stack 0
   277  0000A3                     _tBase:
   278                           	opt stack 0
   279  0000A3                     	ds	3
   280  0000A6                     _B:
   281                           	opt stack 0
   282  0000A6                     	ds	3
   283  0000A9                     _A:
   284                           	opt stack 0
   285  0000A9                     	ds	3
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	cstackBANK0
   296  000060                     __pcstackBANK0:
   297                           	opt stack 0
   298  000060                     ?___ftmul:
   299                           	opt stack 0
   300  000060                     ___ftmul@f1:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0x0
   304  000060                     	ds	3
   305  000063                     ___ftmul@f2:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x3
   309  000063                     	ds	3
   310  000066                     ___ftmul@exp:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314  000066                     	ds	1
   315  000067                     ___ftmul@f3_as_product:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x7
   319  000067                     	ds	3
   320  00006A                     ___ftmul@cntr:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0xA
   324  00006A                     	ds	1
   325  00006B                     ___ftmul@sign:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0xB
   329  00006B                     	ds	1
   330  00006C                     ?___ftadd:
   331                           	opt stack 0
   332  00006C                     ?___fttol:
   333                           	opt stack 0
   334  00006C                     ___ftadd@f1:
   335                           	opt stack 0
   336  00006C                     ___fttol@f1:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0xC
   340  00006C                     	ds	3
   341  00006F                     ___ftadd@f2:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0xF
   345  00006F                     	ds	1
   346  000070                     ??___fttol:
   347                           
   348                           ; 1 bytes @ 0x10
   349  000070                     	ds	2
   350  000072                     ??___ftadd:
   351                           
   352                           ; 1 bytes @ 0x12
   353  000072                     	ds	3
   354  000075                     ___ftadd@sign:
   355                           	opt stack 0
   356  000075                     ___fttol@sign1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x15
   360  000075                     	ds	1
   361  000076                     ___ftadd@exp2:
   362                           	opt stack 0
   363  000076                     ___fttol@lval:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0x16
   367  000076                     	ds	1
   368  000077                     ___ftadd@exp1:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x17
   372  000077                     	ds	3
   373  00007A                     ___fttol@exp1:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x1A
   377  00007A                     	ds	1
   378  00007B                     ??_main:
   379                           
   380                           ; 1 bytes @ 0x1B
   381  00007B                     	ds	2
   382  00007D                     _main$1496:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1D
   386  00007D                     	ds	3
   387  000080                     _main$1497:
   388                           	opt stack 0
   389                           
   390                           ; 3 bytes @ 0x20
   391  000080                     	ds	3
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	cstackCOMRAM
   402  000001                     __pcstackCOMRAM:
   403                           	opt stack 0
   404  000001                     ??_HighPriorityISR:
   405  000001                     
   406                           ; 1 bytes @ 0x0
   407  000001                     	ds	18
   408  000013                     ??_LowPriorityISR:
   409                           
   410                           ; 1 bytes @ 0x12
   411  000013                     	ds	21
   412  000028                     ??_DelayPORXLCD:
   413  000028                     ??_DelayXLCD:
   414  000028                     ?___awdiv:
   415                           	opt stack 0
   416  000028                     ?___awmod:
   417                           	opt stack 0
   418  000028                     ?___ftpack:
   419                           	opt stack 0
   420  000028                     SetDDRamAddr@DDaddr:
   421                           	opt stack 0
   422  000028                     WriteCmdXLCD@cmd:
   423                           	opt stack 0
   424  000028                     WriteDataXLCD@data:
   425                           	opt stack 0
   426  000028                     ___awdiv@dividend:
   427                           	opt stack 0
   428  000028                     ___awmod@dividend:
   429                           	opt stack 0
   430  000028                     ___ftpack@arg:
   431                           	opt stack 0
   432  000028                     ___ftge@ff1:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x27
   436  000028                     	ds	1
   437  000029                     OpenXLCD@lcdtype:
   438                           	opt stack 0
   439  000029                     putrsXLCD@buffer:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x28
   443  000029                     	ds	1
   444  00002A                     ___awdiv@divisor:
   445                           	opt stack 0
   446  00002A                     ___awmod@divisor:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x29
   450  00002A                     	ds	1
   451  00002B                     ___ftpack@exp:
   452                           	opt stack 0
   453  00002B                     ___ftge@ff2:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x2A
   457  00002B                     	ds	1
   458  00002C                     ___awdiv@counter:
   459                           	opt stack 0
   460  00002C                     ___awmod@counter:
   461                           	opt stack 0
   462  00002C                     ___ftpack@sign:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x2B
   466  00002C                     	ds	1
   467  00002D                     ??___ftpack:
   468  00002D                     ___awdiv@sign:
   469                           	opt stack 0
   470  00002D                     ___awmod@sign:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x2C
   474  00002D                     	ds	1
   475  00002E                     ??___ftge:
   476  00002E                     ___awdiv@quotient:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x2D
   480  00002E                     	ds	2
   481  000030                     ?___awtoft:
   482                           	opt stack 0
   483  000030                     ?___ftneg:
   484                           	opt stack 0
   485  000030                     ___awtoft@c:
   486                           	opt stack 0
   487  000030                     ___ftneg@f1:
   488                           	opt stack 0
   489                           
   490                           ; 3 bytes @ 0x2F
   491  000030                     	ds	3
   492  000033                     ___awtoft@sign:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x32
   496  000033                     	ds	1
   497  000034                     ??___ftmul:
   498                           
   499                           ; 1 bytes @ 0x33
   500  000034                     	ds	3
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 54 in file "newmain.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   529 ;;      Params:         0       0       0       0       0       0       0       0       0
   530 ;;      Locals:         0       6       0       0       0       0       0       0       0
   531 ;;      Temps:          0       2       0       0       0       0       0       0       0
   532 ;;      Totals:         0       8       0       0       0       0       0       0       0
   533 ;;Total ram usage:        8 bytes
   534 ;; Hardware stack levels required when called:    5
   535 ;; This function calls:
   536 ;;		_OpenXLCD
   537 ;;		_WriteCmdXLCD
   538 ;;		_WriteDataXLCD
   539 ;;		___awdiv
   540 ;;		___awmod
   541 ;;		___awtoft
   542 ;;		___ftadd
   543 ;;		___ftge
   544 ;;		___ftmul
   545 ;;		___ftneg
   546 ;;		___fttol
   547 ;;		_putrsXLCD
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554  00081E                     __ptext0:
   555                           	opt stack 0
   556  00081E                     _main:
   557                           	opt stack 26
   558                           
   559                           ;newmain.c: 56: TRISC = 0;
   560                           
   561                           ;incstack = 0
   562  00081E  0E00               	movlw	0
   563  000820  6E94               	movwf	3988,c	;volatile
   564                           
   565                           ;newmain.c: 59: CCP1CONbits.CCP1M3 = 1;
   566  000822  86BD               	bsf	4029,3,c	;volatile
   567                           
   568                           ;newmain.c: 60: CCP1CONbits.CCP1M2 = 1;
   569  000824  84BD               	bsf	4029,2,c	;volatile
   570                           
   571                           ;newmain.c: 61: CCP1CONbits.CCP1M1 = 0;
   572  000826  92BD               	bcf	4029,1,c	;volatile
   573                           
   574                           ;newmain.c: 62: CCP1CONbits.CCP1M0 = 0;
   575  000828  90BD               	bcf	4029,0,c	;volatile
   576                           
   577                           ;newmain.c: 65: T2CONbits.T2OUTPS3 = 0;
   578  00082A  9CCA               	bcf	4042,6,c	;volatile
   579                           
   580                           ;newmain.c: 66: T2CONbits.T2OUTPS2 = 0;
   581  00082C  9ACA               	bcf	4042,5,c	;volatile
   582                           
   583                           ;newmain.c: 67: T2CONbits.T2OUTPS1 = 0;
   584  00082E  98CA               	bcf	4042,4,c	;volatile
   585                           
   586                           ;newmain.c: 68: T2CONbits.T2OUTPS0 = 0;
   587  000830  96CA               	bcf	4042,3,c	;volatile
   588                           
   589                           ;newmain.c: 69: T2CONbits.TMR2ON = 1;
   590  000832  84CA               	bsf	4042,2,c	;volatile
   591                           
   592                           ;newmain.c: 70: T2CONbits.T2CKPS1 = 0;
   593  000834  92CA               	bcf	4042,1,c	;volatile
   594                           
   595                           ;newmain.c: 71: T2CONbits.T2CKPS0 = 1;
   596  000836  80CA               	bsf	4042,0,c	;volatile
   597                           
   598                           ;newmain.c: 72: PR2 = 199;
   599  000838  0EC7               	movlw	199
   600  00083A  6ECB               	movwf	4043,c	;volatile
   601                           
   602                           ;newmain.c: 82: RCONbits.IPEN = 1;
   603  00083C  8ED0               	bsf	4048,7,c	;volatile
   604                           
   605                           ;newmain.c: 83: INTCONbits.GIEH = 1;
   606  00083E  8EF2               	bsf	intcon,7,c	;volatile
   607                           
   608                           ;newmain.c: 84: INTCONbits.GIEL = 1;
   609  000840  8CF2               	bsf	intcon,6,c	;volatile
   610                           
   611                           ;newmain.c: 87: TRISA = 0xFF;
   612  000842  6892               	setf	3986,c	;volatile
   613                           
   614                           ;newmain.c: 89: T3CONbits.RD16 = 1;
   615  000844  8EB1               	bsf	4017,7,c	;volatile
   616                           
   617                           ;newmain.c: 90: T3CONbits.T3CKPS1 = 0;
   618  000846  9AB1               	bcf	4017,5,c	;volatile
   619                           
   620                           ;newmain.c: 91: T3CONbits.T3CKPS0 = 0;
   621  000848  98B1               	bcf	4017,4,c	;volatile
   622                           
   623                           ;newmain.c: 92: T3CONbits.TMR3CS = 0;
   624  00084A  92B1               	bcf	4017,1,c	;volatile
   625                           
   626                           ;newmain.c: 93: T3CONbits.TMR3ON = 1;
   627  00084C  80B1               	bsf	4017,0,c	;volatile
   628                           
   629                           ;newmain.c: 94: TMR3H = 0xF2;
   630  00084E  0EF2               	movlw	242
   631  000850  6EB3               	movwf	4019,c	;volatile
   632                           
   633                           ;newmain.c: 95: TMR3L = 0xFB;
   634  000852  0EFB               	movlw	251
   635  000854  6EB2               	movwf	4018,c	;volatile
   636                           
   637                           ;newmain.c: 96: PIR2bits.TMR3IF = 0;
   638  000856  92A1               	bcf	4001,1,c	;volatile
   639                           
   640                           ;newmain.c: 97: PIE2bits.TMR3IE = 1;
   641  000858  82A0               	bsf	4000,1,c	;volatile
   642                           
   643                           ;newmain.c: 98: IPR2bits.TMR3IP = 1;
   644  00085A  82A2               	bsf	4002,1,c	;volatile
   645                           
   646                           ;newmain.c: 106: ADCON0bits.ADON = 1;
   647  00085C  80C2               	bsf	4034,0,c	;volatile
   648                           
   649                           ;newmain.c: 107: ADCON0bits.GODONE = 0;
   650  00085E  92C2               	bcf	4034,1,c	;volatile
   651                           
   652                           ;newmain.c: 108: ADCON1bits.VCFG1 = 0;
   653  000860  9AC1               	bcf	4033,5,c	;volatile
   654                           
   655                           ;newmain.c: 109: ADCON1bits.VCFG0 = 0;
   656  000862  98C1               	bcf	4033,4,c	;volatile
   657                           
   658                           ;newmain.c: 110: ADCON1bits.PCFG3 = 1;
   659  000864  86C1               	bsf	4033,3,c	;volatile
   660                           
   661                           ;newmain.c: 111: ADCON1bits.PCFG2 = 0;
   662  000866  94C1               	bcf	4033,2,c	;volatile
   663                           
   664                           ;newmain.c: 112: ADCON1bits.PCFG1 = 1;
   665  000868  82C1               	bsf	4033,1,c	;volatile
   666                           
   667                           ;newmain.c: 113: ADCON1bits.PCFG0 = 1;
   668  00086A  80C1               	bsf	4033,0,c	;volatile
   669                           
   670                           ;newmain.c: 114: PIR1bits.ADIF = 0;
   671  00086C  9C9E               	bcf	3998,6,c	;volatile
   672                           
   673                           ;newmain.c: 115: PIE1bits.ADIE = 1;
   674  00086E  8C9D               	bsf	3997,6,c	;volatile
   675                           
   676                           ;newmain.c: 116: IPR1bits.ADIP = 0;
   677  000870  9C9F               	bcf	3999,6,c	;volatile
   678                           
   679                           ;newmain.c: 117: ADCON2bits.ADFM = 1;
   680  000872  8EC0               	bsf	4032,7,c	;volatile
   681                           
   682                           ;newmain.c: 118: ADCON2bits.ACQT2 = 0;
   683  000874  9AC0               	bcf	4032,5,c	;volatile
   684                           
   685                           ;newmain.c: 119: ADCON2bits.ACQT1 = 1;
   686  000876  88C0               	bsf	4032,4,c	;volatile
   687                           
   688                           ;newmain.c: 120: ADCON2bits.ACQT0 = 0;
   689  000878  96C0               	bcf	4032,3,c	;volatile
   690                           
   691                           ;newmain.c: 121: ADCON2bits.ADCS2 = 1;
   692  00087A  84C0               	bsf	4032,2,c	;volatile
   693                           
   694                           ;newmain.c: 122: ADCON2bits.ADCS1 = 0;
   695  00087C  92C0               	bcf	4032,1,c	;volatile
   696                           
   697                           ;newmain.c: 123: ADCON2bits.ADCS0 = 1;
   698  00087E  80C0               	bsf	4032,0,c	;volatile
   699                           
   700                           ;newmain.c: 127: PORTCbits.RC1 = 1;
   701  000880  8282               	bsf	3970,1,c	;volatile
   702                           
   703                           ;newmain.c: 133: TRISD = 0;
   704  000882  0E00               	movlw	0
   705  000884  6E95               	movwf	3989,c	;volatile
   706                           
   707                           ;newmain.c: 134: TRISE = 0;
   708  000886  0E00               	movlw	0
   709  000888  6E96               	movwf	3990,c	;volatile
   710                           
   711                           ;newmain.c: 135: OpenXLCD(0b00101100 & 0b00111000);
   712  00088A  0E28               	movlw	40
   713  00088C  EC73  F009         	call	_OpenXLCD
   714                           
   715                           ;newmain.c: 136: WriteCmdXLCD(0x01);
   716  000890  0E01               	movlw	1
   717  000892  ECE7  F00A         	call	_WriteCmdXLCD
   718                           
   719                           ;newmain.c: 137: _delay((unsigned long)((2)*(20000000/4000.0)));
   720  000896  0E0D               	movlw	13
   721  000898  0100               	movlb	0	; () banked
   722  00089A  6F7B               	movwf	??_main& (0+255),b
   723  00089C  0EFB               	movlw	251
   724  00089E                     u1597:
   725  00089E  2EE8               	decfsz	wreg,f,c
   726  0008A0  D7FE               	bra	u1597
   727  0008A2  2F7B               	decfsz	??_main& (0+255),f,b
   728  0008A4  D7FC               	bra	u1597
   729  0008A6  D000               	nop2	
   730                           
   731                           ;newmain.c: 138: WriteCmdXLCD(0x01);
   732  0008A8  0E01               	movlw	1
   733  0008AA  ECE7  F00A         	call	_WriteCmdXLCD
   734                           
   735                           ;newmain.c: 139: WriteCmdXLCD(0x0C);
   736  0008AE  0E0C               	movlw	12
   737  0008B0  ECE7  F00A         	call	_WriteCmdXLCD
   738  0008B4                     
   739                           ;newmain.c: 142: if ((flagAdFim == 1) && (contRa3 < 49)) {
   740  0008B4  0100               	movlb	0	; () banked
   741  0008B6  059F               	decf	_flagAdFim& (0+255),w,b
   742  0008B8  11A0               	iorwf	(_flagAdFim+1)& (0+255),w,b
   743  0008BA  A4D8               	btfss	status,2,c
   744  0008BC  D10C               	goto	l186
   745                           
   746                           ; BSR set to: 0
   747  0008BE  BF9E               	btfsc	(_contRa3+1)& (0+255),7,b
   748  0008C0  D006               	goto	u1540
   749  0008C2  519E               	movf	(_contRa3+1)& (0+255),w,b
   750  0008C4  E103               	bnz	u1541
   751  0008C6  0E31               	movlw	49
   752  0008C8  5D9D               	subwf	_contRa3& (0+255),w,b
   753  0008CA  B0D8               	btfsc	status,0,c
   754  0008CC                     u1541:
   755  0008CC  D104               	goto	l186
   756  0008CE                     u1540:
   757                           
   758                           ; BSR set to: 0
   759                           ;newmain.c: 143: flagAdFim = 0;
   760  0008CE  0E00               	movlw	0
   761  0008D0  6FA0               	movwf	(_flagAdFim+1)& (0+255),b
   762  0008D2  0E00               	movlw	0
   763  0008D4  6F9F               	movwf	_flagAdFim& (0+255),b
   764                           
   765                           ; BSR set to: 0
   766                           ;newmain.c: 145: convertRes = (4.887585533 * ((256 * ADRESH) + ADRESL));
   767  0008D6  50C4               	movf	4036,w,c	;volatile
   768  0008D8  6F7C               	movwf	(??_main+1)& (0+255),b
   769  0008DA  6B7B               	clrf	??_main& (0+255),b
   770  0008DC  50C3               	movf	4035,w,c	;volatile
   771  0008DE  257B               	addwf	??_main& (0+255),w,b
   772  0008E0  6E30               	movwf	___awtoft@c,c
   773  0008E2  0E00               	movlw	0
   774  0008E4  217C               	addwfc	(??_main+1)& (0+255),w,b
   775  0008E6  6E31               	movwf	___awtoft@c+1,c
   776  0008E8  EC23  F00B         	call	___awtoft	;wreg free
   777  0008EC  C030  F060         	movff	?___awtoft,___ftmul@f1
   778  0008F0  C031  F061         	movff	?___awtoft+1,___ftmul@f1+1
   779  0008F4  C032  F062         	movff	?___awtoft+2,___ftmul@f1+2
   780  0008F8  0E67               	movlw	103
   781  0008FA  0100               	movlb	0	; () banked
   782  0008FC  6F63               	movwf	___ftmul@f2& (0+255),b
   783  0008FE  0E9C               	movlw	156
   784  000900  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   785  000902  0E40               	movlw	64
   786  000904  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   787  000906  EC3B  F008         	call	___ftmul	;wreg free
   788  00090A  C060  F098         	movff	?___ftmul,_convertRes
   789  00090E  C061  F099         	movff	?___ftmul+1,_convertRes+1
   790  000912  C062  F09A         	movff	?___ftmul+2,_convertRes+2
   791                           
   792                           ;newmain.c: 146: convertResTemp = (float)convertRes*0.1;
   793  000916  C098  F060         	movff	_convertRes,___ftmul@f1
   794  00091A  C099  F061         	movff	_convertRes+1,___ftmul@f1+1
   795  00091E  C09A  F062         	movff	_convertRes+2,___ftmul@f1+2
   796  000922  0ECD               	movlw	205
   797  000924  0100               	movlb	0	; () banked
   798  000926  6F63               	movwf	___ftmul@f2& (0+255),b
   799  000928  0ECC               	movlw	204
   800  00092A  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
   801  00092C  0E3D               	movlw	61
   802  00092E  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
   803  000930  EC3B  F008         	call	___ftmul	;wreg free
   804  000934  C060  F086         	movff	?___ftmul,_convertResTemp
   805  000938  C061  F087         	movff	?___ftmul+1,_convertResTemp+1
   806  00093C  C062  F088         	movff	?___ftmul+2,_convertResTemp+2
   807                           
   808                           ;newmain.c: 148: erro = -(convertPot - convertResTemp);
   809  000940  C095  F06F         	movff	_convertPot,___ftadd@f2
   810  000944  C096  F070         	movff	_convertPot+1,___ftadd@f2+1
   811  000948  C097  F071         	movff	_convertPot+2,___ftadd@f2+2
   812  00094C  C086  F030         	movff	_convertResTemp,___ftneg@f1
   813  000950  C087  F031         	movff	_convertResTemp+1,___ftneg@f1+1
   814  000954  C088  F032         	movff	_convertResTemp+2,___ftneg@f1+2
   815  000958  EC59  F00B         	call	___ftneg	;wreg free
   816  00095C  C030  F06C         	movff	?___ftneg,___ftadd@f1
   817  000960  C031  F06D         	movff	?___ftneg+1,___ftadd@f1+1
   818  000964  C032  F06E         	movff	?___ftneg+2,___ftadd@f1+2
   819  000968  ECE8  F006         	call	___ftadd	;wreg free
   820  00096C  C06C  F07D         	movff	?___ftadd,_main$1496
   821  000970  C06D  F07E         	movff	?___ftadd+1,_main$1496+1
   822  000974  C06E  F07F         	movff	?___ftadd+2,_main$1496+2
   823                           
   824                           ;newmain.c: 148: erro = -(convertPot - convertResTemp);
   825  000978  C07D  F030         	movff	_main$1496,___ftneg@f1
   826  00097C  C07E  F031         	movff	_main$1496+1,___ftneg@f1+1
   827  000980  C07F  F032         	movff	_main$1496+2,___ftneg@f1+2
   828  000984  EC59  F00B         	call	___ftneg	;wreg free
   829  000988  C030  F092         	movff	?___ftneg,_erro
   830  00098C  C031  F093         	movff	?___ftneg+1,_erro+1
   831  000990  C032  F094         	movff	?___ftneg+2,_erro+2
   832                           
   833                           ;newmain.c: 149: sai_cont = (erro * A) + (erro_ant * B) + (sai_cont_ant);
   834  000994  C0A6  F063         	movff	_B,___ftmul@f2
   835  000998  C0A7  F064         	movff	_B+1,___ftmul@f2+1
   836  00099C  C0A8  F065         	movff	_B+2,___ftmul@f2+2
   837  0009A0  C08F  F060         	movff	_erro_ant,___ftmul@f1
   838  0009A4  C090  F061         	movff	_erro_ant+1,___ftmul@f1+1
   839  0009A8  C091  F062         	movff	_erro_ant+2,___ftmul@f1+2
   840  0009AC  EC3B  F008         	call	___ftmul	;wreg free
   841  0009B0  C060  F06F         	movff	?___ftmul,___ftadd@f2
   842  0009B4  C061  F070         	movff	?___ftmul+1,___ftadd@f2+1
   843  0009B8  C062  F071         	movff	?___ftmul+2,___ftadd@f2+2
   844  0009BC  C0A9  F063         	movff	_A,___ftmul@f2
   845  0009C0  C0AA  F064         	movff	_A+1,___ftmul@f2+1
   846  0009C4  C0AB  F065         	movff	_A+2,___ftmul@f2+2
   847  0009C8  C092  F060         	movff	_erro,___ftmul@f1
   848  0009CC  C093  F061         	movff	_erro+1,___ftmul@f1+1
   849  0009D0  C094  F062         	movff	_erro+2,___ftmul@f1+2
   850  0009D4  EC3B  F008         	call	___ftmul	;wreg free
   851  0009D8  C060  F06C         	movff	?___ftmul,___ftadd@f1
   852  0009DC  C061  F06D         	movff	?___ftmul+1,___ftadd@f1+1
   853  0009E0  C062  F06E         	movff	?___ftmul+2,___ftadd@f1+2
   854  0009E4  ECE8  F006         	call	___ftadd	;wreg free
   855  0009E8  C06C  F080         	movff	?___ftadd,_main$1497
   856  0009EC  C06D  F081         	movff	?___ftadd+1,_main$1497+1
   857  0009F0  C06E  F082         	movff	?___ftadd+2,_main$1497+2
   858                           
   859                           ;newmain.c: 149: sai_cont = (erro * A) + (erro_ant * B) + (sai_cont_ant);
   860  0009F4  C080  F06C         	movff	_main$1497,___ftadd@f1
   861  0009F8  C081  F06D         	movff	_main$1497+1,___ftadd@f1+1
   862  0009FC  C082  F06E         	movff	_main$1497+2,___ftadd@f1+2
   863  000A00  C089  F06F         	movff	_sai_cont_ant,___ftadd@f2
   864  000A04  C08A  F070         	movff	_sai_cont_ant+1,___ftadd@f2+1
   865  000A08  C08B  F071         	movff	_sai_cont_ant+2,___ftadd@f2+2
   866  000A0C  ECE8  F006         	call	___ftadd	;wreg free
   867  000A10  C06C  F08C         	movff	?___ftadd,_sai_cont
   868  000A14  C06D  F08D         	movff	?___ftadd+1,_sai_cont+1
   869  000A18  C06E  F08E         	movff	?___ftadd+2,_sai_cont+2
   870                           
   871                           ;newmain.c: 151: if (sai_cont > 800) {
   872  000A1C  0E00               	movlw	0
   873  000A1E  6E28               	movwf	___ftge@ff1,c
   874  000A20  0E48               	movlw	72
   875  000A22  6E29               	movwf	___ftge@ff1+1,c
   876  000A24  0E44               	movlw	68
   877  000A26  6E2A               	movwf	___ftge@ff1+2,c
   878  000A28  C08C  F02B         	movff	_sai_cont,___ftge@ff2
   879  000A2C  C08D  F02C         	movff	_sai_cont+1,___ftge@ff2+1
   880  000A30  C08E  F02D         	movff	_sai_cont+2,___ftge@ff2+2
   881  000A34  ECC7  F009         	call	___ftge	;wreg free
   882  000A38  B0D8               	btfsc	status,0,c
   883  000A3A  D007               	goto	l187
   884                           
   885                           ;newmain.c: 152: sai_cont = 800;
   886  000A3C  0E00               	movlw	0
   887  000A3E  0100               	movlb	0	; () banked
   888  000A40  6F8C               	movwf	_sai_cont& (0+255),b
   889  000A42  0E48               	movlw	72
   890  000A44  6F8D               	movwf	(_sai_cont+1)& (0+255),b
   891  000A46  0E44               	movlw	68
   892  000A48  6F8E               	movwf	(_sai_cont+2)& (0+255),b
   893  000A4A                     l187:
   894                           
   895                           ;newmain.c: 153: }
   896                           ;newmain.c: 154: if (sai_cont < 0) {
   897                           
   898                           ; BSR set to: 0
   899  000A4A  0100               	movlb	0	; () banked
   900  000A4C  AF8E               	btfss	(_sai_cont+2)& (0+255),7,b
   901  000A4E  D006               	goto	l188
   902                           
   903                           ; BSR set to: 0
   904                           ;newmain.c: 155: sai_cont = 0;
   905  000A50  0E00               	movlw	0
   906  000A52  6F8C               	movwf	_sai_cont& (0+255),b
   907  000A54  0E00               	movlw	0
   908  000A56  6F8D               	movwf	(_sai_cont+1)& (0+255),b
   909  000A58  0E00               	movlw	0
   910  000A5A  6F8E               	movwf	(_sai_cont+2)& (0+255),b
   911  000A5C                     l188:
   912                           
   913                           ; BSR set to: 0
   914                           ;newmain.c: 156: }
   915                           ;newmain.c: 157: sai_cont_ant = sai_cont;
   916                           
   917                           ; BSR set to: 0
   918  000A5C  C08C  F089         	movff	_sai_cont,_sai_cont_ant
   919  000A60  C08D  F08A         	movff	_sai_cont+1,_sai_cont_ant+1
   920  000A64  C08E  F08B         	movff	_sai_cont+2,_sai_cont_ant+2
   921                           
   922                           ; BSR set to: 0
   923                           ;newmain.c: 158: erro_ant = erro;
   924  000A68  C092  F08F         	movff	_erro,_erro_ant
   925  000A6C  C093  F090         	movff	_erro+1,_erro_ant+1
   926  000A70  C094  F091         	movff	_erro+2,_erro_ant+2
   927                           
   928                           ; BSR set to: 0
   929                           ;newmain.c: 160: dc = (int)sai_cont;
   930  000A74  C08C  F06C         	movff	_sai_cont,___fttol@f1
   931  000A78  C08D  F06D         	movff	_sai_cont+1,___fttol@f1+1
   932  000A7C  C08E  F06E         	movff	_sai_cont+2,___fttol@f1+2
   933  000A80  ECBF  F007         	call	___fttol	;wreg free
   934  000A84  C06C  F0A1         	movff	?___fttol,_dc
   935  000A88  C06D  F0A2         	movff	?___fttol+1,_dc+1
   936                           
   937                           ;newmain.c: 161: CCPR1L = (char) (dc >> 2);
   938  000A8C  C0A1  F07B         	movff	_dc,??_main
   939  000A90  C0A2  F07C         	movff	_dc+1,??_main+1
   940  000A94  0100               	movlb	0	; () banked
   941  000A96  357C               	rlcf	(??_main+1)& (0+255),w,b
   942  000A98  337C               	rrcf	(??_main+1)& (0+255),f,b
   943  000A9A  337B               	rrcf	??_main& (0+255),f,b
   944  000A9C  357C               	rlcf	(??_main+1)& (0+255),w,b
   945  000A9E  337C               	rrcf	(??_main+1)& (0+255),f,b
   946  000AA0  337B               	rrcf	??_main& (0+255),f,b
   947  000AA2  517B               	movf	??_main& (0+255),w,b
   948  000AA4  6EBE               	movwf	4030,c	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;newmain.c: 162: CCP1CONbits.DC1B0 = dc % 2;
   952  000AA6  C0A1  F07B         	movff	_dc,??_main
   953  000AAA  0E01               	movlw	1
   954  000AAC  177B               	andwf	??_main& (0+255),f,b
   955  000AAE  3B7B               	swapf	??_main& (0+255),f,b
   956  000AB0  50BD               	movf	4029,w,c	;volatile
   957  000AB2  197B               	xorwf	??_main& (0+255),w,b
   958  000AB4  0BEF               	andlw	-17
   959  000AB6  197B               	xorwf	??_main& (0+255),w,b
   960  000AB8  6EBD               	movwf	4029,c	;volatile
   961                           
   962                           ; BSR set to: 0
   963                           ;newmain.c: 163: CCP1CONbits.DC1B1 = (dc >> 1) % 2;
   964  000ABA  35A2               	rlcf	(_dc+1)& (0+255),w,b
   965  000ABC  31A2               	rrcf	(_dc+1)& (0+255),w,b
   966  000ABE  6F7C               	movwf	(??_main+1)& (0+255),b
   967  000AC0  31A1               	rrcf	_dc& (0+255),w,b
   968  000AC2  6F7B               	movwf	??_main& (0+255),b
   969  000AC4  0E01               	movlw	1
   970  000AC6  177B               	andwf	??_main& (0+255),f,b
   971  000AC8  3B7B               	swapf	??_main& (0+255),f,b
   972  000ACA  477B               	rlncf	??_main& (0+255),f,b
   973  000ACC  50BD               	movf	4029,w,c	;volatile
   974  000ACE  197B               	xorwf	??_main& (0+255),w,b
   975  000AD0  0BDF               	andlw	-33
   976  000AD2  197B               	xorwf	??_main& (0+255),w,b
   977  000AD4  6EBD               	movwf	4029,c	;volatile
   978  000AD6                     l186:
   979                           
   980                           ; BSR set to: 0
   981                           ;newmain.c: 164: }
   982                           ;newmain.c: 165: if ((flagAdFim == 1) && (contRa3 > 49)) {
   983                           
   984                           ; BSR set to: 0
   985  000AD6  059F               	decf	_flagAdFim& (0+255),w,b
   986  000AD8  11A0               	iorwf	(_flagAdFim+1)& (0+255),w,b
   987  000ADA  B4D8               	btfsc	status,2,c
   988                           
   989                           ; BSR set to: 0
   990  000ADC  BF9E               	btfsc	(_contRa3+1)& (0+255),7,b
   991  000ADE  D6EA               	goto	l185
   992  000AE0  519E               	movf	(_contRa3+1)& (0+255),w,b
   993  000AE2  E104               	bnz	u1580
   994  000AE4  0E32               	movlw	50
   995  000AE6  5D9D               	subwf	_contRa3& (0+255),w,b
   996  000AE8  A0D8               	btfss	status,0,c
   997  000AEA  D6E4               	goto	l185
   998  000AEC                     u1580:
   999                           
  1000                           ; BSR set to: 0
  1001                           ;newmain.c: 166: flagAdFim = 0;
  1002  000AEC  0E00               	movlw	0
  1003  000AEE  6FA0               	movwf	(_flagAdFim+1)& (0+255),b
  1004  000AF0  0E00               	movlw	0
  1005  000AF2  6F9F               	movwf	_flagAdFim& (0+255),b
  1006                           
  1007                           ;newmain.c: 167: contRa3 = 0;
  1008  000AF4  0E00               	movlw	0
  1009  000AF6  6F9E               	movwf	(_contRa3+1)& (0+255),b
  1010  000AF8  0E00               	movlw	0
  1011  000AFA  6F9D               	movwf	_contRa3& (0+255),b
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;newmain.c: 169: convertPot = 0.01466275659 * ((256 * ADRESH) + ADRESL);
  1015  000AFC  50C4               	movf	4036,w,c	;volatile
  1016  000AFE  6F7C               	movwf	(??_main+1)& (0+255),b
  1017  000B00  6B7B               	clrf	??_main& (0+255),b
  1018  000B02  50C3               	movf	4035,w,c	;volatile
  1019  000B04  257B               	addwf	??_main& (0+255),w,b
  1020  000B06  6E30               	movwf	___awtoft@c,c
  1021  000B08  0E00               	movlw	0
  1022  000B0A  217C               	addwfc	(??_main+1)& (0+255),w,b
  1023  000B0C  6E31               	movwf	___awtoft@c+1,c
  1024  000B0E  EC23  F00B         	call	___awtoft	;wreg free
  1025  000B12  C030  F060         	movff	?___awtoft,___ftmul@f1
  1026  000B16  C031  F061         	movff	?___awtoft+1,___ftmul@f1+1
  1027  000B1A  C032  F062         	movff	?___awtoft+2,___ftmul@f1+2
  1028  000B1E  0E3C               	movlw	60
  1029  000B20  0100               	movlb	0	; () banked
  1030  000B22  6F63               	movwf	___ftmul@f2& (0+255),b
  1031  000B24  0E70               	movlw	112
  1032  000B26  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1033  000B28  0E3C               	movlw	60
  1034  000B2A  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1035  000B2C  EC3B  F008         	call	___ftmul	;wreg free
  1036  000B30  C060  F095         	movff	?___ftmul,_convertPot
  1037  000B34  C061  F096         	movff	?___ftmul+1,_convertPot+1
  1038  000B38  C062  F097         	movff	?___ftmul+2,_convertPot+2
  1039                           
  1040                           ;newmain.c: 170: convertPot = convertPot + tBase;
  1041  000B3C  C095  F06C         	movff	_convertPot,___ftadd@f1
  1042  000B40  C096  F06D         	movff	_convertPot+1,___ftadd@f1+1
  1043  000B44  C097  F06E         	movff	_convertPot+2,___ftadd@f1+2
  1044  000B48  C0A3  F06F         	movff	_tBase,___ftadd@f2
  1045  000B4C  C0A4  F070         	movff	_tBase+1,___ftadd@f2+1
  1046  000B50  C0A5  F071         	movff	_tBase+2,___ftadd@f2+2
  1047  000B54  ECE8  F006         	call	___ftadd	;wreg free
  1048  000B58  C06C  F095         	movff	?___ftadd,_convertPot
  1049  000B5C  C06D  F096         	movff	?___ftadd+1,_convertPot+1
  1050  000B60  C06E  F097         	movff	?___ftadd+2,_convertPot+2
  1051                           
  1052                           ;newmain.c: 172: display = convertPot*10;
  1053  000B64  0E00               	movlw	0
  1054  000B66  0100               	movlb	0	; () banked
  1055  000B68  6F63               	movwf	___ftmul@f2& (0+255),b
  1056  000B6A  0E20               	movlw	32
  1057  000B6C  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1058  000B6E  0E41               	movlw	65
  1059  000B70  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1060  000B72  C095  F060         	movff	_convertPot,___ftmul@f1
  1061  000B76  C096  F061         	movff	_convertPot+1,___ftmul@f1+1
  1062  000B7A  C097  F062         	movff	_convertPot+2,___ftmul@f1+2
  1063  000B7E  EC3B  F008         	call	___ftmul	;wreg free
  1064  000B82  C060  F06C         	movff	?___ftmul,___fttol@f1
  1065  000B86  C061  F06D         	movff	?___ftmul+1,___fttol@f1+1
  1066  000B8A  C062  F06E         	movff	?___ftmul+2,___fttol@f1+2
  1067  000B8E  ECBF  F007         	call	___fttol	;wreg free
  1068  000B92  C06C  F09B         	movff	?___fttol,_display
  1069  000B96  C06D  F09C         	movff	?___fttol+1,_display+1
  1070                           
  1071                           ;newmain.c: 174: WriteCmdXLCD(0x80);
  1072  000B9A  0E80               	movlw	128
  1073  000B9C  ECE7  F00A         	call	_WriteCmdXLCD
  1074                           
  1075                           ;newmain.c: 175: putrsXLCD("T.REF:");
  1076  000BA0  0E09               	movlw	low STR_1
  1077  000BA2  6E29               	movwf	putrsXLCD@buffer,c
  1078  000BA4  0E08               	movlw	high STR_1
  1079  000BA6  6E2A               	movwf	putrsXLCD@buffer+1,c
  1080  000BA8  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1081                           
  1082                           ;newmain.c: 176: WriteDataXLCD(0x30 + (display / 100));
  1083  000BAC  C09B  F028         	movff	_display,___awdiv@dividend
  1084  000BB0  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1085  000BB4  0E00               	movlw	0
  1086  000BB6  6E2B               	movwf	___awdiv@divisor+1,c
  1087  000BB8  0E64               	movlw	100
  1088  000BBA  6E2A               	movwf	___awdiv@divisor,c
  1089  000BBC  EC0F  F00A         	call	___awdiv	;wreg free
  1090  000BC0  5028               	movf	?___awdiv,w,c
  1091  000BC2  0F30               	addlw	48
  1092  000BC4  ECC8  F00A         	call	_WriteDataXLCD
  1093                           
  1094                           ;newmain.c: 177: display = display % 100;
  1095  000BC8  C09B  F028         	movff	_display,___awmod@dividend
  1096  000BCC  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1097  000BD0  0E00               	movlw	0
  1098  000BD2  6E2B               	movwf	___awmod@divisor+1,c
  1099  000BD4  0E64               	movlw	100
  1100  000BD6  6E2A               	movwf	___awmod@divisor,c
  1101  000BD8  EC51  F00A         	call	___awmod	;wreg free
  1102  000BDC  C028  F09B         	movff	?___awmod,_display
  1103  000BE0  C029  F09C         	movff	?___awmod+1,_display+1
  1104                           
  1105                           ;newmain.c: 178: WriteDataXLCD(0x30 + (display / 10));
  1106  000BE4  C09B  F028         	movff	_display,___awdiv@dividend
  1107  000BE8  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1108  000BEC  0E00               	movlw	0
  1109  000BEE  6E2B               	movwf	___awdiv@divisor+1,c
  1110  000BF0  0E0A               	movlw	10
  1111  000BF2  6E2A               	movwf	___awdiv@divisor,c
  1112  000BF4  EC0F  F00A         	call	___awdiv	;wreg free
  1113  000BF8  5028               	movf	?___awdiv,w,c
  1114  000BFA  0F30               	addlw	48
  1115  000BFC  ECC8  F00A         	call	_WriteDataXLCD
  1116                           
  1117                           ;newmain.c: 179: putrsXLCD(".");
  1118  000C00  0E1A               	movlw	low STR_2
  1119  000C02  6E29               	movwf	putrsXLCD@buffer,c
  1120  000C04  0E08               	movlw	high STR_2
  1121  000C06  6E2A               	movwf	putrsXLCD@buffer+1,c
  1122  000C08  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1123                           
  1124                           ;newmain.c: 180: WriteDataXLCD(0x30 + (display % 10));
  1125  000C0C  C09B  F028         	movff	_display,___awmod@dividend
  1126  000C10  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1127  000C14  0E00               	movlw	0
  1128  000C16  6E2B               	movwf	___awmod@divisor+1,c
  1129  000C18  0E0A               	movlw	10
  1130  000C1A  6E2A               	movwf	___awmod@divisor,c
  1131  000C1C  EC51  F00A         	call	___awmod	;wreg free
  1132  000C20  5028               	movf	?___awmod,w,c
  1133  000C22  0F30               	addlw	48
  1134  000C24  ECC8  F00A         	call	_WriteDataXLCD
  1135                           
  1136                           ;newmain.c: 183: putrsXLCD("  DC:");
  1137  000C28  0E10               	movlw	low STR_3
  1138  000C2A  6E29               	movwf	putrsXLCD@buffer,c
  1139  000C2C  0E08               	movlw	high STR_3
  1140  000C2E  6E2A               	movwf	putrsXLCD@buffer+1,c
  1141  000C30  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1142                           
  1143                           ;newmain.c: 185: display = convertResTemp*10;
  1144  000C34  0E00               	movlw	0
  1145  000C36  0100               	movlb	0	; () banked
  1146  000C38  6F63               	movwf	___ftmul@f2& (0+255),b
  1147  000C3A  0E20               	movlw	32
  1148  000C3C  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1149  000C3E  0E41               	movlw	65
  1150  000C40  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1151  000C42  C086  F060         	movff	_convertResTemp,___ftmul@f1
  1152  000C46  C087  F061         	movff	_convertResTemp+1,___ftmul@f1+1
  1153  000C4A  C088  F062         	movff	_convertResTemp+2,___ftmul@f1+2
  1154  000C4E  EC3B  F008         	call	___ftmul	;wreg free
  1155  000C52  C060  F06C         	movff	?___ftmul,___fttol@f1
  1156  000C56  C061  F06D         	movff	?___ftmul+1,___fttol@f1+1
  1157  000C5A  C062  F06E         	movff	?___ftmul+2,___fttol@f1+2
  1158  000C5E  ECBF  F007         	call	___fttol	;wreg free
  1159  000C62  C06C  F09B         	movff	?___fttol,_display
  1160  000C66  C06D  F09C         	movff	?___fttol+1,_display+1
  1161                           
  1162                           ;newmain.c: 187: WriteCmdXLCD(0xC0);
  1163  000C6A  0EC0               	movlw	192
  1164  000C6C  ECE7  F00A         	call	_WriteCmdXLCD
  1165                           
  1166                           ;newmain.c: 188: putrsXLCD("T.LIDA:");
  1167  000C70  0E01               	movlw	low STR_4
  1168  000C72  6E29               	movwf	putrsXLCD@buffer,c
  1169  000C74  0E08               	movlw	high STR_4
  1170  000C76  6E2A               	movwf	putrsXLCD@buffer+1,c
  1171  000C78  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1172                           
  1173                           ;newmain.c: 189: WriteDataXLCD(0x30 + (display / 100));
  1174  000C7C  C09B  F028         	movff	_display,___awdiv@dividend
  1175  000C80  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1176  000C84  0E00               	movlw	0
  1177  000C86  6E2B               	movwf	___awdiv@divisor+1,c
  1178  000C88  0E64               	movlw	100
  1179  000C8A  6E2A               	movwf	___awdiv@divisor,c
  1180  000C8C  EC0F  F00A         	call	___awdiv	;wreg free
  1181  000C90  5028               	movf	?___awdiv,w,c
  1182  000C92  0F30               	addlw	48
  1183  000C94  ECC8  F00A         	call	_WriteDataXLCD
  1184                           
  1185                           ;newmain.c: 190: display = display % 100;
  1186  000C98  C09B  F028         	movff	_display,___awmod@dividend
  1187  000C9C  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1188  000CA0  0E00               	movlw	0
  1189  000CA2  6E2B               	movwf	___awmod@divisor+1,c
  1190  000CA4  0E64               	movlw	100
  1191  000CA6  6E2A               	movwf	___awmod@divisor,c
  1192  000CA8  EC51  F00A         	call	___awmod	;wreg free
  1193  000CAC  C028  F09B         	movff	?___awmod,_display
  1194  000CB0  C029  F09C         	movff	?___awmod+1,_display+1
  1195                           
  1196                           ;newmain.c: 191: WriteDataXLCD(0x30 + (display / 10));
  1197  000CB4  C09B  F028         	movff	_display,___awdiv@dividend
  1198  000CB8  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1199  000CBC  0E00               	movlw	0
  1200  000CBE  6E2B               	movwf	___awdiv@divisor+1,c
  1201  000CC0  0E0A               	movlw	10
  1202  000CC2  6E2A               	movwf	___awdiv@divisor,c
  1203  000CC4  EC0F  F00A         	call	___awdiv	;wreg free
  1204  000CC8  5028               	movf	?___awdiv,w,c
  1205  000CCA  0F30               	addlw	48
  1206  000CCC  ECC8  F00A         	call	_WriteDataXLCD
  1207                           
  1208                           ;newmain.c: 192: putrsXLCD(".");
  1209  000CD0  0E1A               	movlw	low STR_2
  1210  000CD2  6E29               	movwf	putrsXLCD@buffer,c
  1211  000CD4  0E08               	movlw	high STR_2
  1212  000CD6  6E2A               	movwf	putrsXLCD@buffer+1,c
  1213  000CD8  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1214                           
  1215                           ;newmain.c: 193: WriteDataXLCD(0x30 + (display % 10));
  1216  000CDC  C09B  F028         	movff	_display,___awmod@dividend
  1217  000CE0  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1218  000CE4  0E00               	movlw	0
  1219  000CE6  6E2B               	movwf	___awmod@divisor+1,c
  1220  000CE8  0E0A               	movlw	10
  1221  000CEA  6E2A               	movwf	___awmod@divisor,c
  1222  000CEC  EC51  F00A         	call	___awmod	;wreg free
  1223  000CF0  5028               	movf	?___awmod,w,c
  1224  000CF2  0F30               	addlw	48
  1225  000CF4  ECC8  F00A         	call	_WriteDataXLCD
  1226                           
  1227                           ;newmain.c: 195: putrsXLCD(" ");
  1228  000CF8  0E16               	movlw	low STR_6
  1229  000CFA  6E29               	movwf	putrsXLCD@buffer,c
  1230  000CFC  0E08               	movlw	high STR_6
  1231  000CFE  6E2A               	movwf	putrsXLCD@buffer+1,c
  1232  000D00  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1233                           
  1234                           ;newmain.c: 196: convertDc = 0.125*dc;
  1235  000D04  C0A1  F030         	movff	_dc,___awtoft@c
  1236  000D08  C0A2  F031         	movff	_dc+1,___awtoft@c+1
  1237  000D0C  EC23  F00B         	call	___awtoft	;wreg free
  1238  000D10  C030  F060         	movff	?___awtoft,___ftmul@f1
  1239  000D14  C031  F061         	movff	?___awtoft+1,___ftmul@f1+1
  1240  000D18  C032  F062         	movff	?___awtoft+2,___ftmul@f1+2
  1241  000D1C  0E00               	movlw	0
  1242  000D1E  0100               	movlb	0	; () banked
  1243  000D20  6F63               	movwf	___ftmul@f2& (0+255),b
  1244  000D22  0E00               	movlw	0
  1245  000D24  6F64               	movwf	(___ftmul@f2+1)& (0+255),b
  1246  000D26  0E3E               	movlw	62
  1247  000D28  6F65               	movwf	(___ftmul@f2+2)& (0+255),b
  1248  000D2A  EC3B  F008         	call	___ftmul	;wreg free
  1249  000D2E  C060  F083         	movff	?___ftmul,_convertDc
  1250  000D32  C061  F084         	movff	?___ftmul+1,_convertDc+1
  1251  000D36  C062  F085         	movff	?___ftmul+2,_convertDc+2
  1252                           
  1253                           ;newmain.c: 197: display = convertDc;
  1254  000D3A  C083  F06C         	movff	_convertDc,___fttol@f1
  1255  000D3E  C084  F06D         	movff	_convertDc+1,___fttol@f1+1
  1256  000D42  C085  F06E         	movff	_convertDc+2,___fttol@f1+2
  1257  000D46  ECBF  F007         	call	___fttol	;wreg free
  1258  000D4A  C06C  F09B         	movff	?___fttol,_display
  1259  000D4E  C06D  F09C         	movff	?___fttol+1,_display+1
  1260                           
  1261                           ;newmain.c: 198: WriteDataXLCD(0x30 + display / 100);
  1262  000D52  C09B  F028         	movff	_display,___awdiv@dividend
  1263  000D56  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1264  000D5A  0E00               	movlw	0
  1265  000D5C  6E2B               	movwf	___awdiv@divisor+1,c
  1266  000D5E  0E64               	movlw	100
  1267  000D60  6E2A               	movwf	___awdiv@divisor,c
  1268  000D62  EC0F  F00A         	call	___awdiv	;wreg free
  1269  000D66  5028               	movf	?___awdiv,w,c
  1270  000D68  0F30               	addlw	48
  1271  000D6A  ECC8  F00A         	call	_WriteDataXLCD
  1272                           
  1273                           ;newmain.c: 199: display = display % 100;
  1274  000D6E  C09B  F028         	movff	_display,___awmod@dividend
  1275  000D72  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1276  000D76  0E00               	movlw	0
  1277  000D78  6E2B               	movwf	___awmod@divisor+1,c
  1278  000D7A  0E64               	movlw	100
  1279  000D7C  6E2A               	movwf	___awmod@divisor,c
  1280  000D7E  EC51  F00A         	call	___awmod	;wreg free
  1281  000D82  C028  F09B         	movff	?___awmod,_display
  1282  000D86  C029  F09C         	movff	?___awmod+1,_display+1
  1283                           
  1284                           ;newmain.c: 200: WriteDataXLCD(0x30 + display / 10);
  1285  000D8A  C09B  F028         	movff	_display,___awdiv@dividend
  1286  000D8E  C09C  F029         	movff	_display+1,___awdiv@dividend+1
  1287  000D92  0E00               	movlw	0
  1288  000D94  6E2B               	movwf	___awdiv@divisor+1,c
  1289  000D96  0E0A               	movlw	10
  1290  000D98  6E2A               	movwf	___awdiv@divisor,c
  1291  000D9A  EC0F  F00A         	call	___awdiv	;wreg free
  1292  000D9E  5028               	movf	?___awdiv,w,c
  1293  000DA0  0F30               	addlw	48
  1294  000DA2  ECC8  F00A         	call	_WriteDataXLCD
  1295                           
  1296                           ;newmain.c: 201: WriteDataXLCD(0x30 + display % 10);
  1297  000DA6  C09B  F028         	movff	_display,___awmod@dividend
  1298  000DAA  C09C  F029         	movff	_display+1,___awmod@dividend+1
  1299  000DAE  0E00               	movlw	0
  1300  000DB0  6E2B               	movwf	___awmod@divisor+1,c
  1301  000DB2  0E0A               	movlw	10
  1302  000DB4  6E2A               	movwf	___awmod@divisor,c
  1303  000DB6  EC51  F00A         	call	___awmod	;wreg free
  1304  000DBA  5028               	movf	?___awmod,w,c
  1305  000DBC  0F30               	addlw	48
  1306  000DBE  ECC8  F00A         	call	_WriteDataXLCD
  1307                           
  1308                           ;newmain.c: 202: putrsXLCD("%");
  1309  000DC2  0E18               	movlw	low STR_7
  1310  000DC4  6E29               	movwf	putrsXLCD@buffer,c
  1311  000DC6  0E08               	movlw	high STR_7
  1312  000DC8  6E2A               	movwf	putrsXLCD@buffer+1,c
  1313  000DCA  EC3F  F00B         	call	_putrsXLCD	;wreg free
  1314  000DCE  D572               	goto	l185
  1315  000DD0                     __end_of_main:
  1316                           	opt stack 0
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _putrsXLCD *****************
  1329 ;; Defined at:
  1330 ;;		line 533 in file "nxlcd.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  buffer          2   40[COMRAM] PTR const unsigned char 
  1333 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(8), 
  1334 ;;		 -> STR_3(6), STR_2(2), STR_1(7), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         2       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    4
  1353 ;; This function calls:
  1354 ;;		_BusyXLCD
  1355 ;;		_WriteDataXLCD
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text1
  1362  00167E                     __ptext1:
  1363                           	opt stack 0
  1364  00167E                     _putrsXLCD:
  1365                           	opt stack 26
  1366                           
  1367                           ;nxlcd.c: 535: while(*buffer)
  1368                           
  1369                           ;incstack = 0
  1370  00167E  D00F               	goto	l132
  1371  001680                     
  1372                           ;nxlcd.c: 536: {
  1373                           ;nxlcd.c: 537: while(BusyXLCD());
  1374  001680  EC06  F00B         	call	_BusyXLCD	;wreg free
  1375  001684  0900               	iorlw	0
  1376  001686  A4D8               	btfss	status,2,c
  1377  001688  D7FB               	goto	l133
  1378                           
  1379                           ;nxlcd.c: 538: WriteDataXLCD(*buffer);
  1380  00168A  C029  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1381  00168E  C02A  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1382  001692                     	if	0	;tblptru may be non-zero
  1383  001692                     	endif
  1384  001692                     	if	0	;tblptru may be non-zero
  1385  001692                     	endif
  1386  001692  0008               	tblrd		*
  1387  001694  50F5               	movf	tablat,w,c
  1388  001696  ECC8  F00A         	call	_WriteDataXLCD
  1389                           
  1390                           ;nxlcd.c: 539: buffer++;
  1391  00169A  4A29               	infsnz	putrsXLCD@buffer,f,c
  1392  00169C  2A2A               	incf	putrsXLCD@buffer+1,f,c
  1393  00169E                     l132:
  1394  00169E  C029  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1395  0016A2  C02A  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1396  0016A6                     	if	0	;tblptru may be non-zero
  1397  0016A6                     	endif
  1398  0016A6                     	if	0	;tblptru may be non-zero
  1399  0016A6                     	endif
  1400  0016A6  0008               	tblrd		*
  1401  0016A8  50F5               	movf	tablat,w,c
  1402  0016AA  0900               	iorlw	0
  1403  0016AC  B4D8               	btfsc	status,2,c
  1404  0016AE  0012               	return	
  1405  0016B0  D7E7               	goto	l133
  1406  0016B2                     __end_of_putrsXLCD:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           intcon	equ	0xFF2
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           postdec1	equ	0xFE5
  1416                           fsr1l	equ	0xFE1
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _WriteDataXLCD *****************
  1420 ;; Defined at:
  1421 ;;		line 449 in file "nxlcd.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  data            1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  data            1   39[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    3
  1442 ;; This function calls:
  1443 ;;		_DelayFor18TCY
  1444 ;; This function is called by:
  1445 ;;		_putrsXLCD
  1446 ;;		_main
  1447 ;;		_putsXLCD
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text2
  1452  001590                     __ptext2:
  1453                           	opt stack 0
  1454  001590                     _WriteDataXLCD:
  1455                           	opt stack 26
  1456                           
  1457                           ;incstack = 0
  1458                           ;WriteDataXLCD@data stored from wreg
  1459  001590  6E28               	movwf	WriteDataXLCD@data,c
  1460                           
  1461                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1462  001592  0E0F               	movlw	15
  1463  001594  1695               	andwf	3989,f,c	;volatile
  1464                           
  1465                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1466  001596  0E0F               	movlw	15
  1467  001598  1683               	andwf	3971,f,c	;volatile
  1468                           
  1469                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1470  00159A  5028               	movf	WriteDataXLCD@data,w,c
  1471  00159C  0BF0               	andlw	240
  1472  00159E  1283               	iorwf	3971,f,c	;volatile
  1473                           
  1474                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1475  0015A0  808D               	bsf	3981,0,c	;volatile
  1476                           
  1477                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1478  0015A2  948D               	bcf	3981,2,c	;volatile
  1479                           
  1480                           ;nxlcd.c: 474: DelayFor18TCY();
  1481  0015A4  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  1482                           
  1483                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1484  0015A8  828D               	bsf	3981,1,c	;volatile
  1485                           
  1486                           ;nxlcd.c: 476: DelayFor18TCY();
  1487  0015AA  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  1488                           
  1489                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1490  0015AE  928D               	bcf	3981,1,c	;volatile
  1491                           
  1492                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1493  0015B0  0E0F               	movlw	15
  1494  0015B2  1683               	andwf	3971,f,c	;volatile
  1495                           
  1496                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1497  0015B4  3828               	swapf	WriteDataXLCD@data,w,c
  1498  0015B6  0BF0               	andlw	240
  1499  0015B8  0BF0               	andlw	240
  1500  0015BA  1283               	iorwf	3971,f,c	;volatile
  1501                           
  1502                           ;nxlcd.c: 485: DelayFor18TCY();
  1503  0015BC  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  1504                           
  1505                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1506  0015C0  828D               	bsf	3981,1,c	;volatile
  1507                           
  1508                           ;nxlcd.c: 487: DelayFor18TCY();
  1509  0015C2  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  1510                           
  1511                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1512  0015C6  928D               	bcf	3981,1,c	;volatile
  1513                           
  1514                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1515  0015C8  0EF0               	movlw	240
  1516  0015CA  1295               	iorwf	3989,f,c	;volatile
  1517  0015CC  0012               	return	
  1518  0015CE                     __end_of_WriteDataXLCD:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           intcon	equ	0xFF2
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1l	equ	0xFE1
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function ___fttol *****************
  1532 ;; Defined at:
  1533 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  f1              3   12[BANK0 ] float 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  lval            4   22[BANK0 ] unsigned long 
  1538 ;;  exp1            1   26[BANK0 ] unsigned char 
  1539 ;;  sign1           1   21[BANK0 ] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  4   12[BANK0 ] long 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       4       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1552 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1553 ;;Total ram usage:       15 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    2
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text3
  1564  000F7E                     __ptext3:
  1565                           	opt stack 0
  1566  000F7E                     ___fttol:
  1567                           	opt stack 28
  1568                           
  1569                           ;incstack = 0
  1570  000F7E  C06E  F070         	movff	___fttol@f1+2,??___fttol
  1571  000F82  0100               	movlb	0	; () banked
  1572  000F84  6B71               	clrf	(??___fttol+1)& (0+255),b
  1573  000F86  6B72               	clrf	(??___fttol+2)& (0+255),b
  1574  000F88  356D               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1575  000F8A  3770               	rlcf	??___fttol& (0+255),f,b
  1576  000F8C  E301               	bnc	u1421
  1577  000F8E  8171               	bsf	(??___fttol+1)& (0+255),0,b
  1578  000F90                     u1421:
  1579  000F90  5170               	movf	??___fttol& (0+255),w,b
  1580  000F92  6F7A               	movwf	___fttol@exp1& (0+255),b
  1581  000F94  517A               	movf	___fttol@exp1& (0+255),w,b
  1582  000F96  A4D8               	btfss	status,2,c
  1583  000F98  D009               	goto	l507
  1584                           
  1585                           ; BSR set to: 0
  1586  000F9A  0E00               	movlw	0
  1587  000F9C  6F6C               	movwf	?___fttol& (0+255),b
  1588  000F9E  0E00               	movlw	0
  1589  000FA0  6F6D               	movwf	(?___fttol+1)& (0+255),b
  1590  000FA2  0E00               	movlw	0
  1591  000FA4  6F6E               	movwf	(?___fttol+2)& (0+255),b
  1592  000FA6  0E00               	movlw	0
  1593  000FA8  6F6F               	movwf	(?___fttol+3)& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596  000FAA  0012               	return	
  1597  000FAC                     l507:
  1598                           
  1599                           ; BSR set to: 0
  1600                           
  1601                           ; BSR set to: 0
  1602  000FAC  0E17               	movlw	23
  1603  000FAE  6F70               	movwf	??___fttol& (0+255),b
  1604  000FB0  C06C  F071         	movff	___fttol@f1,??___fttol+1
  1605  000FB4  C06D  F072         	movff	___fttol@f1+1,??___fttol+2
  1606  000FB8  C06E  F073         	movff	___fttol@f1+2,??___fttol+3
  1607  000FBC  2970               	incf	??___fttol& (0+255),w,b
  1608  000FBE  6F74               	movwf	(??___fttol+4)& (0+255),b
  1609  000FC0  D004               	goto	u1440
  1610  000FC2                     u1445:
  1611  000FC2  90D8               	bcf	status,0,c
  1612  000FC4  3373               	rrcf	(??___fttol+3)& (0+255),f,b
  1613  000FC6  3372               	rrcf	(??___fttol+2)& (0+255),f,b
  1614  000FC8  3371               	rrcf	(??___fttol+1)& (0+255),f,b
  1615  000FCA                     u1440:
  1616  000FCA  2F74               	decfsz	(??___fttol+4)& (0+255),f,b
  1617  000FCC  D7FA               	goto	u1445
  1618  000FCE  0100               	movlb	0	; () banked
  1619  000FD0  5171               	movf	(??___fttol+1)& (0+255),w,b
  1620  000FD2  6F75               	movwf	___fttol@sign1& (0+255),b
  1621                           
  1622                           ; BSR set to: 0
  1623  000FD4  8F6D               	bsf	(___fttol@f1+1)& (0+255),7,b
  1624                           
  1625                           ; BSR set to: 0
  1626  000FD6  0EFF               	movlw	255
  1627  000FD8  176C               	andwf	___fttol@f1& (0+255),f,b
  1628  000FDA  0EFF               	movlw	255
  1629  000FDC  176D               	andwf	(___fttol@f1+1)& (0+255),f,b
  1630  000FDE  0E00               	movlw	0
  1631  000FE0  176E               	andwf	(___fttol@f1+2)& (0+255),f,b
  1632                           
  1633                           ; BSR set to: 0
  1634  000FE2  516C               	movf	___fttol@f1& (0+255),w,b
  1635  000FE4  6F76               	movwf	___fttol@lval& (0+255),b
  1636  000FE6  516D               	movf	(___fttol@f1+1)& (0+255),w,b
  1637  000FE8  6F77               	movwf	(___fttol@lval+1)& (0+255),b
  1638  000FEA  516E               	movf	(___fttol@f1+2)& (0+255),w,b
  1639  000FEC  6F78               	movwf	(___fttol@lval+2)& (0+255),b
  1640  000FEE  6B79               	clrf	(___fttol@lval+3)& (0+255),b
  1641                           
  1642                           ; BSR set to: 0
  1643  000FF0  0E8E               	movlw	142
  1644  000FF2  5F7A               	subwf	___fttol@exp1& (0+255),f,b
  1645                           
  1646                           ; BSR set to: 0
  1647  000FF4  AF7A               	btfss	___fttol@exp1& (0+255),7,b
  1648  000FF6  D016               	goto	l509
  1649                           
  1650                           ; BSR set to: 0
  1651  000FF8  517A               	movf	___fttol@exp1& (0+255),w,b
  1652  000FFA  0A80               	xorlw	128
  1653  000FFC  0F8F               	addlw	143
  1654  000FFE  B0D8               	btfsc	status,0,c
  1655  001000  D009               	goto	l510
  1656                           
  1657                           ; BSR set to: 0
  1658  001002  0E00               	movlw	0
  1659  001004  6F6C               	movwf	?___fttol& (0+255),b
  1660  001006  0E00               	movlw	0
  1661  001008  6F6D               	movwf	(?___fttol+1)& (0+255),b
  1662  00100A  0E00               	movlw	0
  1663  00100C  6F6E               	movwf	(?___fttol+2)& (0+255),b
  1664  00100E  0E00               	movlw	0
  1665  001010  6F6F               	movwf	(?___fttol+3)& (0+255),b
  1666                           
  1667                           ; BSR set to: 0
  1668  001012  0012               	return	
  1669  001014                     l510:
  1670                           
  1671                           ; BSR set to: 0
  1672                           
  1673                           ; BSR set to: 0
  1674                           
  1675                           ; BSR set to: 0
  1676  001014  90D8               	bcf	status,0,c
  1677  001016  3379               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1678  001018  3378               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1679  00101A  3377               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1680  00101C  3376               	rrcf	___fttol@lval& (0+255),f,b
  1681                           
  1682                           ; BSR set to: 0
  1683  00101E  3F7A               	incfsz	___fttol@exp1& (0+255),f,b
  1684  001020  D7F9               	goto	l510
  1685                           
  1686                           ; BSR set to: 0
  1687  001022  D015               	goto	u1480
  1688  001024                     l509:
  1689                           
  1690                           ; BSR set to: 0
  1691                           
  1692                           ; BSR set to: 0
  1693  001024  0E17               	movlw	23
  1694  001026  657A               	cpfsgt	___fttol@exp1& (0+255),b
  1695  001028  D00F               	goto	l515
  1696                           
  1697                           ; BSR set to: 0
  1698  00102A  0E00               	movlw	0
  1699  00102C  6F6C               	movwf	?___fttol& (0+255),b
  1700  00102E  0E00               	movlw	0
  1701  001030  6F6D               	movwf	(?___fttol+1)& (0+255),b
  1702  001032  0E00               	movlw	0
  1703  001034  6F6E               	movwf	(?___fttol+2)& (0+255),b
  1704  001036  0E00               	movlw	0
  1705  001038  6F6F               	movwf	(?___fttol+3)& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708  00103A  0012               	return	
  1709  00103C                     
  1710                           ; BSR set to: 0
  1711                           
  1712                           ; BSR set to: 0
  1713  00103C  90D8               	bcf	status,0,c
  1714  00103E  3776               	rlcf	___fttol@lval& (0+255),f,b
  1715  001040  3777               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1716  001042  3778               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1717  001044  3779               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1718  001046  077A               	decf	___fttol@exp1& (0+255),f,b
  1719  001048                     l515:
  1720                           
  1721                           ; BSR set to: 0
  1722                           
  1723                           ; BSR set to: 0
  1724  001048  517A               	movf	___fttol@exp1& (0+255),w,b
  1725  00104A  A4D8               	btfss	status,2,c
  1726  00104C  D7F7               	goto	l516
  1727  00104E                     u1480:
  1728                           
  1729                           ; BSR set to: 0
  1730                           
  1731                           ; BSR set to: 0
  1732                           
  1733                           ; BSR set to: 0
  1734  00104E  5175               	movf	___fttol@sign1& (0+255),w,b
  1735  001050  B4D8               	btfsc	status,2,c
  1736  001052  D008               	goto	l518
  1737                           
  1738                           ; BSR set to: 0
  1739  001054  1F79               	comf	(___fttol@lval+3)& (0+255),f,b
  1740  001056  1F78               	comf	(___fttol@lval+2)& (0+255),f,b
  1741  001058  1F77               	comf	(___fttol@lval+1)& (0+255),f,b
  1742  00105A  6D76               	negf	___fttol@lval& (0+255),b
  1743  00105C  0E00               	movlw	0
  1744  00105E  2377               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1745  001060  2378               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1746  001062  2379               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1747  001064                     l518:
  1748                           
  1749                           ; BSR set to: 0
  1750                           
  1751                           ; BSR set to: 0
  1752  001064  C076  F06C         	movff	___fttol@lval,?___fttol
  1753  001068  C077  F06D         	movff	___fttol@lval+1,?___fttol+1
  1754  00106C  C078  F06E         	movff	___fttol@lval+2,?___fttol+2
  1755  001070  C079  F06F         	movff	___fttol@lval+3,?___fttol+3
  1756  001074  0012               	return	
  1757  001076                     __end_of___fttol:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           postdec1	equ	0xFE5
  1767                           fsr1l	equ	0xFE1
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function ___ftneg *****************
  1771 ;; Defined at:
  1772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  f1              3   47[COMRAM] float 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  3   47[COMRAM] float 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         3       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    2
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text4
  1801  0016B2                     __ptext4:
  1802                           	opt stack 0
  1803  0016B2                     ___ftneg:
  1804                           	opt stack 28
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;incstack = 0
  1808  0016B2  5030               	movf	___ftneg@f1,w,c
  1809  0016B4  1031               	iorwf	___ftneg@f1+1,w,c
  1810  0016B6  1032               	iorwf	___ftneg@f1+2,w,c
  1811  0016B8  B4D8               	btfsc	status,2,c
  1812  0016BA  D006               	goto	l497
  1813  0016BC  0E00               	movlw	0
  1814  0016BE  1A30               	xorwf	___ftneg@f1,f,c
  1815  0016C0  0E00               	movlw	0
  1816  0016C2  1A31               	xorwf	___ftneg@f1+1,f,c
  1817  0016C4  0E80               	movlw	128
  1818  0016C6  1A32               	xorwf	___ftneg@f1+2,f,c
  1819  0016C8                     l497:
  1820  0016C8  C030  F030         	movff	___ftneg@f1,?___ftneg
  1821  0016CC  C031  F031         	movff	___ftneg@f1+1,?___ftneg+1
  1822  0016D0  C032  F032         	movff	___ftneg@f1+2,?___ftneg+2
  1823  0016D4  0012               	return		;funcret
  1824  0016D6                     __end_of___ftneg:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           intcon	equ	0xFF2
  1831                           postinc0	equ	0xFEE
  1832                           wreg	equ	0xFE8
  1833                           postdec1	equ	0xFE5
  1834                           fsr1l	equ	0xFE1
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function ___ftmul *****************
  1838 ;; Defined at:
  1839 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  f1              3    0[BANK0 ] float 
  1842 ;;  f2              3    3[BANK0 ] float 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  1845 ;;  sign            1   11[BANK0 ] unsigned char 
  1846 ;;  cntr            1   10[BANK0 ] unsigned char 
  1847 ;;  exp             1    6[BANK0 ] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  3    0[BANK0 ] float 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1857 ;;      Params:         0       6       0       0       0       0       0       0       0
  1858 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1859 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         3      12       0       0       0       0       0       0       0
  1861 ;;Total ram usage:       15 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		___ftpack
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text5
  1872  001076                     __ptext5:
  1873                           	opt stack 0
  1874  001076                     ___ftmul:
  1875                           	opt stack 27
  1876                           
  1877                           ;incstack = 0
  1878  001076  C062  F034         	movff	___ftmul@f1+2,??___ftmul
  1879  00107A  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1880  00107C  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1881  00107E  0100               	movlb	0	; () banked
  1882  001080  3561               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1883  001082  3634               	rlcf	??___ftmul& (0+255),f,c
  1884  001084  E301               	bnc	u1191
  1885  001086  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1886  001088                     u1191:
  1887  001088  5034               	movf	??___ftmul,w,c
  1888  00108A  6F66               	movwf	___ftmul@exp& (0+255),b
  1889  00108C  5166               	movf	___ftmul@exp& (0+255),w,b
  1890  00108E  A4D8               	btfss	status,2,c
  1891  001090  D007               	goto	l486
  1892                           
  1893                           ; BSR set to: 0
  1894  001092  0E00               	movlw	0
  1895  001094  6F60               	movwf	?___ftmul& (0+255),b
  1896  001096  0E00               	movlw	0
  1897  001098  6F61               	movwf	(?___ftmul+1)& (0+255),b
  1898  00109A  0E00               	movlw	0
  1899  00109C  6F62               	movwf	(?___ftmul+2)& (0+255),b
  1900                           
  1901                           ; BSR set to: 0
  1902  00109E  0012               	return	
  1903  0010A0                     l486:
  1904                           
  1905                           ; BSR set to: 0
  1906                           
  1907                           ; BSR set to: 0
  1908  0010A0  C065  F034         	movff	___ftmul@f2+2,??___ftmul
  1909  0010A4  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1910  0010A6  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1911  0010A8  3564               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1912  0010AA  3634               	rlcf	??___ftmul& (0+255),f,c
  1913  0010AC  E301               	bnc	u1211
  1914  0010AE  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1915  0010B0                     u1211:
  1916  0010B0  5034               	movf	??___ftmul,w,c
  1917  0010B2  6F6B               	movwf	___ftmul@sign& (0+255),b
  1918  0010B4  516B               	movf	___ftmul@sign& (0+255),w,b
  1919  0010B6  A4D8               	btfss	status,2,c
  1920  0010B8  D007               	goto	l488
  1921                           
  1922                           ; BSR set to: 0
  1923  0010BA  0E00               	movlw	0
  1924  0010BC  6F60               	movwf	?___ftmul& (0+255),b
  1925  0010BE  0E00               	movlw	0
  1926  0010C0  6F61               	movwf	(?___ftmul+1)& (0+255),b
  1927  0010C2  0E00               	movlw	0
  1928  0010C4  6F62               	movwf	(?___ftmul+2)& (0+255),b
  1929                           
  1930                           ; BSR set to: 0
  1931  0010C6  0012               	return	
  1932  0010C8                     l488:
  1933                           
  1934                           ; BSR set to: 0
  1935                           
  1936                           ; BSR set to: 0
  1937  0010C8  516B               	movf	___ftmul@sign& (0+255),w,b
  1938  0010CA  0F7B               	addlw	123
  1939  0010CC  2766               	addwf	___ftmul@exp& (0+255),f,b
  1940                           
  1941                           ; BSR set to: 0
  1942  0010CE  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  1943  0010D2  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  1944  0010D4  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  1945  0010D6  0E80               	movlw	128
  1946  0010D8  176B               	andwf	___ftmul@sign& (0+255),f,b
  1947                           
  1948                           ; BSR set to: 0
  1949  0010DA  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1950                           
  1951                           ; BSR set to: 0
  1952  0010DC  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1953                           
  1954                           ; BSR set to: 0
  1955  0010DE  0EFF               	movlw	255
  1956  0010E0  1763               	andwf	___ftmul@f2& (0+255),f,b
  1957  0010E2  0EFF               	movlw	255
  1958  0010E4  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  1959  0010E6  0E00               	movlw	0
  1960  0010E8  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  1961                           
  1962                           ; BSR set to: 0
  1963  0010EA  0E00               	movlw	0
  1964  0010EC  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  1965  0010EE  0E00               	movlw	0
  1966  0010F0  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1967  0010F2  0E00               	movlw	0
  1968  0010F4  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1969                           
  1970                           ; BSR set to: 0
  1971  0010F6  0E07               	movlw	7
  1972  0010F8  6F6A               	movwf	___ftmul@cntr& (0+255),b
  1973  0010FA                     
  1974                           ; BSR set to: 0
  1975                           
  1976                           ; BSR set to: 0
  1977  0010FA  A160               	btfss	___ftmul@f1& (0+255),0,b
  1978  0010FC  D006               	goto	l490
  1979                           
  1980                           ; BSR set to: 0
  1981  0010FE  5163               	movf	___ftmul@f2& (0+255),w,b
  1982  001100  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1983  001102  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  1984  001104  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1985  001106  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  1986  001108  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1987  00110A                     l490:
  1988                           
  1989                           ; BSR set to: 0
  1990                           
  1991                           ; BSR set to: 0
  1992  00110A  90D8               	bcf	status,0,c
  1993  00110C  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1994  00110E  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1995  001110  3360               	rrcf	___ftmul@f1& (0+255),f,b
  1996  001112  90D8               	bcf	status,0,c
  1997  001114  3763               	rlcf	___ftmul@f2& (0+255),f,b
  1998  001116  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  1999  001118  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2000                           
  2001                           ; BSR set to: 0
  2002  00111A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2003  00111C  D7EE               	goto	l489
  2004                           
  2005                           ; BSR set to: 0
  2006                           
  2007                           ; BSR set to: 0
  2008  00111E  0E09               	movlw	9
  2009  001120  6F6A               	movwf	___ftmul@cntr& (0+255),b
  2010  001122                     
  2011                           ; BSR set to: 0
  2012                           
  2013                           ; BSR set to: 0
  2014  001122  A160               	btfss	___ftmul@f1& (0+255),0,b
  2015  001124  D006               	goto	l493
  2016                           
  2017                           ; BSR set to: 0
  2018  001126  5163               	movf	___ftmul@f2& (0+255),w,b
  2019  001128  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2020  00112A  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  2021  00112C  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2022  00112E  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  2023  001130  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2024  001132                     l493:
  2025                           
  2026                           ; BSR set to: 0
  2027                           
  2028                           ; BSR set to: 0
  2029  001132  90D8               	bcf	status,0,c
  2030  001134  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2031  001136  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2032  001138  3360               	rrcf	___ftmul@f1& (0+255),f,b
  2033  00113A  90D8               	bcf	status,0,c
  2034  00113C  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2035  00113E  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2036  001140  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2037                           
  2038                           ; BSR set to: 0
  2039  001142  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  2040  001144  D7EE               	goto	l492
  2041                           
  2042                           ; BSR set to: 0
  2043                           
  2044                           ; BSR set to: 0
  2045  001146  C067  F028         	movff	___ftmul@f3_as_product,___ftpack@arg
  2046  00114A  C068  F029         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2047  00114E  C069  F02A         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2048  001152  C066  F02B         	movff	___ftmul@exp,___ftpack@exp
  2049  001156  C06B  F02C         	movff	___ftmul@sign,___ftpack@sign
  2050  00115A  EC1C  F009         	call	___ftpack	;wreg free
  2051  00115E  C028  F060         	movff	?___ftpack,?___ftmul
  2052  001162  C029  F061         	movff	?___ftpack+1,?___ftmul+1
  2053  001166  C02A  F062         	movff	?___ftpack+2,?___ftmul+2
  2054  00116A  0012               	return	
  2055  00116C                     __end_of___ftmul:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           intcon	equ	0xFF2
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postdec1	equ	0xFE5
  2065                           fsr1l	equ	0xFE1
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function ___ftge *****************
  2069 ;; Defined at:
  2070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  ff1             3   39[COMRAM] float 
  2073 ;;  ff2             3   42[COMRAM] float 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2085 ;;      Params:         6       0       0       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2087 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2088 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2089 ;;Total ram usage:        9 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text6
  2100  00138E                     __ptext6:
  2101                           	opt stack 0
  2102  00138E                     ___ftge:
  2103                           	opt stack 28
  2104                           
  2105                           ;incstack = 0
  2106  00138E  AE2A               	btfss	___ftge@ff1+2,7,c
  2107  001390  D016               	goto	l479
  2108  001392  C028  F02E         	movff	___ftge@ff1,??___ftge
  2109  001396  C029  F02F         	movff	___ftge@ff1+1,??___ftge+1
  2110  00139A  C02A  F030         	movff	___ftge@ff1+2,??___ftge+2
  2111  00139E  1E2E               	comf	??___ftge,f,c
  2112  0013A0  1E2F               	comf	??___ftge+1,f,c
  2113  0013A2  1E30               	comf	??___ftge+2,f,c
  2114  0013A4  2A2E               	incf	??___ftge,f,c
  2115  0013A6  0E00               	movlw	0
  2116  0013A8  222F               	addwfc	??___ftge+1,f,c
  2117  0013AA  2230               	addwfc	??___ftge+2,f,c
  2118  0013AC  0E00               	movlw	0
  2119  0013AE  242E               	addwf	??___ftge,w,c
  2120  0013B0  6E28               	movwf	___ftge@ff1,c
  2121  0013B2  0E00               	movlw	0
  2122  0013B4  202F               	addwfc	??___ftge+1,w,c
  2123  0013B6  6E29               	movwf	___ftge@ff1+1,c
  2124  0013B8  0E80               	movlw	128
  2125  0013BA  2030               	addwfc	??___ftge+2,w,c
  2126  0013BC  6E2A               	movwf	___ftge@ff1+2,c
  2127  0013BE                     l479:
  2128  0013BE  AE2D               	btfss	___ftge@ff2+2,7,c
  2129  0013C0  D016               	goto	l480
  2130  0013C2  C02B  F02E         	movff	___ftge@ff2,??___ftge
  2131  0013C6  C02C  F02F         	movff	___ftge@ff2+1,??___ftge+1
  2132  0013CA  C02D  F030         	movff	___ftge@ff2+2,??___ftge+2
  2133  0013CE  1E2E               	comf	??___ftge,f,c
  2134  0013D0  1E2F               	comf	??___ftge+1,f,c
  2135  0013D2  1E30               	comf	??___ftge+2,f,c
  2136  0013D4  2A2E               	incf	??___ftge,f,c
  2137  0013D6  0E00               	movlw	0
  2138  0013D8  222F               	addwfc	??___ftge+1,f,c
  2139  0013DA  2230               	addwfc	??___ftge+2,f,c
  2140  0013DC  0E00               	movlw	0
  2141  0013DE  242E               	addwf	??___ftge,w,c
  2142  0013E0  6E2B               	movwf	___ftge@ff2,c
  2143  0013E2  0E00               	movlw	0
  2144  0013E4  202F               	addwfc	??___ftge+1,w,c
  2145  0013E6  6E2C               	movwf	___ftge@ff2+1,c
  2146  0013E8  0E80               	movlw	128
  2147  0013EA  2030               	addwfc	??___ftge+2,w,c
  2148  0013EC  6E2D               	movwf	___ftge@ff2+2,c
  2149  0013EE                     l480:
  2150  0013EE  0E00               	movlw	0
  2151  0013F0  1A28               	xorwf	___ftge@ff1,f,c
  2152  0013F2  0E00               	movlw	0
  2153  0013F4  1A29               	xorwf	___ftge@ff1+1,f,c
  2154  0013F6  0E80               	movlw	128
  2155  0013F8  1A2A               	xorwf	___ftge@ff1+2,f,c
  2156  0013FA  0E00               	movlw	0
  2157  0013FC  1A2B               	xorwf	___ftge@ff2,f,c
  2158  0013FE  0E00               	movlw	0
  2159  001400  1A2C               	xorwf	___ftge@ff2+1,f,c
  2160  001402  0E80               	movlw	128
  2161  001404  1A2D               	xorwf	___ftge@ff2+2,f,c
  2162  001406  502B               	movf	___ftge@ff2,w,c
  2163  001408  5C28               	subwf	___ftge@ff1,w,c
  2164  00140A  502C               	movf	___ftge@ff2+1,w,c
  2165  00140C  5829               	subwfb	___ftge@ff1+1,w,c
  2166  00140E  502D               	movf	___ftge@ff2+2,w,c
  2167  001410  582A               	subwfb	___ftge@ff1+2,w,c
  2168  001412  B0D8               	btfsc	status,0,c
  2169  001414  D002               	goto	l1616
  2170  001416  90D8               	bcf	status,0,c
  2171  001418  0012               	return	
  2172  00141A                     l1616:
  2173  00141A  80D8               	bsf	status,0,c
  2174  00141C  0012               	return	
  2175  00141E                     __end_of___ftge:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           intcon	equ	0xFF2
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           postdec1	equ	0xFE5
  2185                           fsr1l	equ	0xFE1
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function ___ftadd *****************
  2189 ;; Defined at:
  2190 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  f1              3   12[BANK0 ] float 
  2193 ;;  f2              3   15[BANK0 ] float 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  exp1            1   23[BANK0 ] unsigned char 
  2196 ;;  exp2            1   22[BANK0 ] unsigned char 
  2197 ;;  sign            1   21[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  3   12[BANK0 ] float 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:         0       6       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2209 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2210 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2211 ;;Total ram usage:       12 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    3
  2214 ;; This function calls:
  2215 ;;		___ftpack
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text7
  2222  000DD0                     __ptext7:
  2223                           	opt stack 0
  2224  000DD0                     ___ftadd:
  2225                           	opt stack 27
  2226                           
  2227                           ;incstack = 0
  2228  000DD0  C06E  F072         	movff	___ftadd@f1+2,??___ftadd
  2229  000DD4  0100               	movlb	0	; () banked
  2230  000DD6  6B73               	clrf	(??___ftadd+1)& (0+255),b
  2231  000DD8  6B74               	clrf	(??___ftadd+2)& (0+255),b
  2232  000DDA  356D               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2233  000DDC  3772               	rlcf	??___ftadd& (0+255),f,b
  2234  000DDE  E301               	bnc	u981
  2235  000DE0  8173               	bsf	(??___ftadd+1)& (0+255),0,b
  2236  000DE2                     u981:
  2237  000DE2  5172               	movf	??___ftadd& (0+255),w,b
  2238  000DE4  6F77               	movwf	___ftadd@exp1& (0+255),b
  2239  000DE6  C071  F072         	movff	___ftadd@f2+2,??___ftadd
  2240  000DEA  6B73               	clrf	(??___ftadd+1)& (0+255),b
  2241  000DEC  6B74               	clrf	(??___ftadd+2)& (0+255),b
  2242  000DEE  3570               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2243  000DF0  3772               	rlcf	??___ftadd& (0+255),f,b
  2244  000DF2  E301               	bnc	u991
  2245  000DF4  8173               	bsf	(??___ftadd+1)& (0+255),0,b
  2246  000DF6                     u991:
  2247  000DF6  5172               	movf	??___ftadd& (0+255),w,b
  2248  000DF8  6F76               	movwf	___ftadd@exp2& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251  000DFA  5177               	movf	___ftadd@exp1& (0+255),w,b
  2252  000DFC  B4D8               	btfsc	status,2,c
  2253  000DFE  D00B               	goto	u1020
  2254                           
  2255                           ; BSR set to: 0
  2256  000E00  5176               	movf	___ftadd@exp2& (0+255),w,b
  2257  000E02  5D77               	subwf	___ftadd@exp1& (0+255),w,b
  2258  000E04  B0D8               	btfsc	status,0,c
  2259  000E06  D00E               	goto	l438
  2260                           
  2261                           ; BSR set to: 0
  2262  000E08  5177               	movf	___ftadd@exp1& (0+255),w,b
  2263  000E0A  0800               	sublw	0
  2264  000E0C  2576               	addwf	___ftadd@exp2& (0+255),w,b
  2265  000E0E  6F72               	movwf	??___ftadd& (0+255),b
  2266  000E10  0E18               	movlw	24
  2267  000E12  6572               	cpfsgt	??___ftadd& (0+255),b
  2268  000E14  D007               	goto	l438
  2269  000E16                     u1020:
  2270                           
  2271                           ; BSR set to: 0
  2272  000E16  C06F  F06C         	movff	___ftadd@f2,?___ftadd
  2273  000E1A  C070  F06D         	movff	___ftadd@f2+1,?___ftadd+1
  2274  000E1E  C071  F06E         	movff	___ftadd@f2+2,?___ftadd+2
  2275  000E22  0012               	return	
  2276  000E24                     l438:
  2277                           
  2278                           ; BSR set to: 0
  2279                           
  2280                           ; BSR set to: 0
  2281  000E24  5176               	movf	___ftadd@exp2& (0+255),w,b
  2282  000E26  B4D8               	btfsc	status,2,c
  2283  000E28  D00B               	goto	u1050
  2284                           
  2285                           ; BSR set to: 0
  2286  000E2A  5177               	movf	___ftadd@exp1& (0+255),w,b
  2287  000E2C  5D76               	subwf	___ftadd@exp2& (0+255),w,b
  2288  000E2E  B0D8               	btfsc	status,0,c
  2289  000E30  D00E               	goto	l442
  2290                           
  2291                           ; BSR set to: 0
  2292  000E32  5176               	movf	___ftadd@exp2& (0+255),w,b
  2293  000E34  0800               	sublw	0
  2294  000E36  2577               	addwf	___ftadd@exp1& (0+255),w,b
  2295  000E38  6F72               	movwf	??___ftadd& (0+255),b
  2296  000E3A  0E18               	movlw	24
  2297  000E3C  6572               	cpfsgt	??___ftadd& (0+255),b
  2298  000E3E  D007               	goto	l442
  2299  000E40                     u1050:
  2300                           
  2301                           ; BSR set to: 0
  2302  000E40  C06C  F06C         	movff	___ftadd@f1,?___ftadd
  2303  000E44  C06D  F06D         	movff	___ftadd@f1+1,?___ftadd+1
  2304  000E48  C06E  F06E         	movff	___ftadd@f1+2,?___ftadd+2
  2305  000E4C  0012               	return	
  2306  000E4E                     l442:
  2307                           
  2308                           ; BSR set to: 0
  2309                           
  2310                           ; BSR set to: 0
  2311  000E4E  0E06               	movlw	6
  2312  000E50  6F75               	movwf	___ftadd@sign& (0+255),b
  2313                           
  2314                           ; BSR set to: 0
  2315  000E52  BF6E               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  2316                           
  2317                           ; BSR set to: 0
  2318  000E54  8F75               	bsf	___ftadd@sign& (0+255),7,b
  2319                           
  2320                           ; BSR set to: 0
  2321                           
  2322                           ; BSR set to: 0
  2323  000E56  BF71               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  2324                           
  2325                           ; BSR set to: 0
  2326  000E58  8D75               	bsf	___ftadd@sign& (0+255),6,b
  2327                           
  2328                           ; BSR set to: 0
  2329  000E5A  8F6D               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2330                           
  2331                           ; BSR set to: 0
  2332  000E5C  0EFF               	movlw	255
  2333  000E5E  176C               	andwf	___ftadd@f1& (0+255),f,b
  2334  000E60  0EFF               	movlw	255
  2335  000E62  176D               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2336  000E64  0E00               	movlw	0
  2337  000E66  176E               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2338  000E68  8F70               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2339                           
  2340                           ; BSR set to: 0
  2341  000E6A  0EFF               	movlw	255
  2342  000E6C  176F               	andwf	___ftadd@f2& (0+255),f,b
  2343  000E6E  0EFF               	movlw	255
  2344  000E70  1770               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2345  000E72  0E00               	movlw	0
  2346  000E74  1771               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2347                           
  2348                           ; BSR set to: 0
  2349  000E76  5176               	movf	___ftadd@exp2& (0+255),w,b
  2350  000E78  5D77               	subwf	___ftadd@exp1& (0+255),w,b
  2351  000E7A  B0D8               	btfsc	status,0,c
  2352  000E7C  D01B               	goto	l447
  2353  000E7E                     u1080:
  2354                           
  2355                           ; BSR set to: 0
  2356                           
  2357                           ; BSR set to: 0
  2358  000E7E  90D8               	bcf	status,0,c
  2359  000E80  376F               	rlcf	___ftadd@f2& (0+255),f,b
  2360  000E82  3770               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2361  000E84  3771               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2362  000E86  0776               	decf	___ftadd@exp2& (0+255),f,b
  2363                           
  2364                           ; BSR set to: 0
  2365  000E88  5177               	movf	___ftadd@exp1& (0+255),w,b
  2366  000E8A  1976               	xorwf	___ftadd@exp2& (0+255),w,b
  2367  000E8C  B4D8               	btfsc	status,2,c
  2368  000E8E  D00D               	goto	l452
  2369                           
  2370                           ; BSR set to: 0
  2371  000E90  0775               	decf	___ftadd@sign& (0+255),f,b
  2372  000E92  C075  F072         	movff	___ftadd@sign,??___ftadd
  2373  000E96  0E07               	movlw	7
  2374  000E98  1772               	andwf	??___ftadd& (0+255),f,b
  2375  000E9A  B4D8               	btfsc	status,2,c
  2376  000E9C  D006               	goto	l452
  2377  000E9E  D7EF               	goto	u1080
  2378  000EA0                     
  2379                           ; BSR set to: 0
  2380                           
  2381                           ; BSR set to: 0
  2382  000EA0  90D8               	bcf	status,0,c
  2383  000EA2  336E               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2384  000EA4  336D               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2385  000EA6  336C               	rrcf	___ftadd@f1& (0+255),f,b
  2386  000EA8  2B77               	incf	___ftadd@exp1& (0+255),f,b
  2387  000EAA                     l452:
  2388                           
  2389                           ; BSR set to: 0
  2390                           
  2391                           ; BSR set to: 0
  2392  000EAA  5176               	movf	___ftadd@exp2& (0+255),w,b
  2393  000EAC  1977               	xorwf	___ftadd@exp1& (0+255),w,b
  2394  000EAE  B4D8               	btfsc	status,2,c
  2395  000EB0  D01F               	goto	u1150
  2396  000EB2  D7F6               	goto	l453
  2397  000EB4                     l447:
  2398                           
  2399                           ; BSR set to: 0
  2400                           
  2401                           ; BSR set to: 0
  2402  000EB4  5177               	movf	___ftadd@exp1& (0+255),w,b
  2403  000EB6  5D76               	subwf	___ftadd@exp2& (0+255),w,b
  2404  000EB8  B0D8               	btfsc	status,0,c
  2405  000EBA  D01A               	goto	u1150
  2406  000EBC                     u1120:
  2407                           
  2408                           ; BSR set to: 0
  2409                           
  2410                           ; BSR set to: 0
  2411  000EBC  90D8               	bcf	status,0,c
  2412  000EBE  376C               	rlcf	___ftadd@f1& (0+255),f,b
  2413  000EC0  376D               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2414  000EC2  376E               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2415  000EC4  0777               	decf	___ftadd@exp1& (0+255),f,b
  2416                           
  2417                           ; BSR set to: 0
  2418  000EC6  5177               	movf	___ftadd@exp1& (0+255),w,b
  2419  000EC8  1976               	xorwf	___ftadd@exp2& (0+255),w,b
  2420  000ECA  B4D8               	btfsc	status,2,c
  2421  000ECC  D00D               	goto	l461
  2422                           
  2423                           ; BSR set to: 0
  2424  000ECE  0775               	decf	___ftadd@sign& (0+255),f,b
  2425  000ED0  C075  F072         	movff	___ftadd@sign,??___ftadd
  2426  000ED4  0E07               	movlw	7
  2427  000ED6  1772               	andwf	??___ftadd& (0+255),f,b
  2428  000ED8  B4D8               	btfsc	status,2,c
  2429  000EDA  D006               	goto	l461
  2430  000EDC  D7EF               	goto	u1120
  2431  000EDE                     
  2432                           ; BSR set to: 0
  2433                           
  2434                           ; BSR set to: 0
  2435  000EDE  90D8               	bcf	status,0,c
  2436  000EE0  3371               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2437  000EE2  3370               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2438  000EE4  336F               	rrcf	___ftadd@f2& (0+255),f,b
  2439  000EE6  2B76               	incf	___ftadd@exp2& (0+255),f,b
  2440  000EE8                     l461:
  2441                           
  2442                           ; BSR set to: 0
  2443                           
  2444                           ; BSR set to: 0
  2445  000EE8  5176               	movf	___ftadd@exp2& (0+255),w,b
  2446  000EEA  1977               	xorwf	___ftadd@exp1& (0+255),w,b
  2447  000EEC  A4D8               	btfss	status,2,c
  2448  000EEE  D7F7               	goto	l462
  2449  000EF0                     u1150:
  2450                           
  2451                           ; BSR set to: 0
  2452                           
  2453                           ; BSR set to: 0
  2454                           
  2455                           ; BSR set to: 0
  2456  000EF0  AF75               	btfss	___ftadd@sign& (0+255),7,b
  2457  000EF2  D00C               	goto	l464
  2458                           
  2459                           ; BSR set to: 0
  2460  000EF4  0EFF               	movlw	255
  2461  000EF6  1B6C               	xorwf	___ftadd@f1& (0+255),f,b
  2462  000EF8  0EFF               	movlw	255
  2463  000EFA  1B6D               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2464  000EFC  0EFF               	movlw	255
  2465  000EFE  1B6E               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2466  000F00  0E01               	movlw	1
  2467  000F02  276C               	addwf	___ftadd@f1& (0+255),f,b
  2468  000F04  0E00               	movlw	0
  2469  000F06  236D               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2470  000F08  0E00               	movlw	0
  2471  000F0A  236E               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2472  000F0C                     l464:
  2473                           
  2474                           ; BSR set to: 0
  2475  000F0C  AD75               	btfss	___ftadd@sign& (0+255),6,b
  2476  000F0E  D00C               	goto	l465
  2477                           
  2478                           ; BSR set to: 0
  2479  000F10  0EFF               	movlw	255
  2480  000F12  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  2481  000F14  0EFF               	movlw	255
  2482  000F16  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2483  000F18  0EFF               	movlw	255
  2484  000F1A  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2485  000F1C  0E01               	movlw	1
  2486  000F1E  276F               	addwf	___ftadd@f2& (0+255),f,b
  2487  000F20  0E00               	movlw	0
  2488  000F22  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2489  000F24  0E00               	movlw	0
  2490  000F26  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2491  000F28                     l465:
  2492                           
  2493                           ; BSR set to: 0
  2494                           
  2495                           ; BSR set to: 0
  2496  000F28  0E00               	movlw	0
  2497  000F2A  6F75               	movwf	___ftadd@sign& (0+255),b
  2498                           
  2499                           ; BSR set to: 0
  2500  000F2C  516C               	movf	___ftadd@f1& (0+255),w,b
  2501  000F2E  276F               	addwf	___ftadd@f2& (0+255),f,b
  2502  000F30  516D               	movf	(___ftadd@f1+1)& (0+255),w,b
  2503  000F32  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2504  000F34  516E               	movf	(___ftadd@f1+2)& (0+255),w,b
  2505  000F36  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2506                           
  2507                           ; BSR set to: 0
  2508  000F38  AF71               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2509  000F3A  D00E               	goto	l466
  2510                           
  2511                           ; BSR set to: 0
  2512  000F3C  0EFF               	movlw	255
  2513  000F3E  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  2514  000F40  0EFF               	movlw	255
  2515  000F42  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2516  000F44  0EFF               	movlw	255
  2517  000F46  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2518  000F48  0E01               	movlw	1
  2519  000F4A  276F               	addwf	___ftadd@f2& (0+255),f,b
  2520  000F4C  0E00               	movlw	0
  2521  000F4E  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2522  000F50  0E00               	movlw	0
  2523  000F52  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2524                           
  2525                           ; BSR set to: 0
  2526  000F54  0E01               	movlw	1
  2527  000F56  6F75               	movwf	___ftadd@sign& (0+255),b
  2528  000F58                     l466:
  2529                           
  2530                           ; BSR set to: 0
  2531                           
  2532                           ; BSR set to: 0
  2533  000F58  C06F  F028         	movff	___ftadd@f2,___ftpack@arg
  2534  000F5C  C070  F029         	movff	___ftadd@f2+1,___ftpack@arg+1
  2535  000F60  C071  F02A         	movff	___ftadd@f2+2,___ftpack@arg+2
  2536  000F64  C077  F02B         	movff	___ftadd@exp1,___ftpack@exp
  2537  000F68  C075  F02C         	movff	___ftadd@sign,___ftpack@sign
  2538  000F6C  EC1C  F009         	call	___ftpack	;wreg free
  2539  000F70  C028  F06C         	movff	?___ftpack,?___ftadd
  2540  000F74  C029  F06D         	movff	?___ftpack+1,?___ftadd+1
  2541  000F78  C02A  F06E         	movff	?___ftpack+2,?___ftadd+2
  2542  000F7C  0012               	return	
  2543  000F7E                     __end_of___ftadd:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1l	equ	0xFE1
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function ___awtoft *****************
  2557 ;; Defined at:
  2558 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  c               2   47[COMRAM] int 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  sign            1   50[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  3   47[COMRAM] float 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         3       0       0       0       0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2575 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        4 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    3
  2579 ;; This function calls:
  2580 ;;		___ftpack
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text8
  2587  001646                     __ptext8:
  2588                           	opt stack 0
  2589  001646                     ___awtoft:
  2590                           	opt stack 27
  2591                           
  2592                           ;incstack = 0
  2593  001646  0E00               	movlw	0
  2594  001648  6E33               	movwf	___awtoft@sign,c
  2595  00164A  AE31               	btfss	___awtoft@c+1,7,c
  2596  00164C  D006               	goto	l388
  2597  00164E  6C30               	negf	___awtoft@c,c
  2598  001650  1E31               	comf	___awtoft@c+1,f,c
  2599  001652  B0D8               	btfsc	status,0,c
  2600  001654  2A31               	incf	___awtoft@c+1,f,c
  2601  001656  0E01               	movlw	1
  2602  001658  6E33               	movwf	___awtoft@sign,c
  2603  00165A                     l388:
  2604  00165A  C030  F028         	movff	___awtoft@c,___ftpack@arg
  2605  00165E  C031  F029         	movff	___awtoft@c+1,___ftpack@arg+1
  2606  001662  6A2A               	clrf	___ftpack@arg+2,c
  2607  001664  0E8E               	movlw	142
  2608  001666  6E2B               	movwf	___ftpack@exp,c
  2609  001668  C033  F02C         	movff	___awtoft@sign,___ftpack@sign
  2610  00166C  EC1C  F009         	call	___ftpack	;wreg free
  2611  001670  C028  F030         	movff	?___ftpack,?___awtoft
  2612  001674  C029  F031         	movff	?___ftpack+1,?___awtoft+1
  2613  001678  C02A  F032         	movff	?___ftpack+2,?___awtoft+2
  2614  00167C  0012               	return	
  2615  00167E                     __end_of___awtoft:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           intcon	equ	0xFF2
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           postdec1	equ	0xFE5
  2625                           fsr1l	equ	0xFE1
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function ___ftpack *****************
  2629 ;; Defined at:
  2630 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  arg             3   39[COMRAM] unsigned um
  2633 ;;  exp             1   42[COMRAM] unsigned char 
  2634 ;;  sign            1   43[COMRAM] unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  3   39[COMRAM] float 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         5       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2649 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        8 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    2
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		___awtoft
  2657 ;;		___ftadd
  2658 ;;		___ftmul
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text9
  2663  001238                     __ptext9:
  2664                           	opt stack 0
  2665  001238                     ___ftpack:
  2666                           	opt stack 27
  2667                           
  2668                           ;incstack = 0
  2669  001238  502B               	movf	___ftpack@exp,w,c
  2670  00123A  B4D8               	btfsc	status,2,c
  2671  00123C  D005               	goto	u820
  2672  00123E  5028               	movf	___ftpack@arg,w,c
  2673  001240  1029               	iorwf	___ftpack@arg+1,w,c
  2674  001242  102A               	iorwf	___ftpack@arg+2,w,c
  2675  001244  A4D8               	btfss	status,2,c
  2676  001246  D00C               	goto	l407
  2677  001248                     u820:
  2678  001248  0E00               	movlw	0
  2679  00124A  6E28               	movwf	?___ftpack,c
  2680  00124C  0E00               	movlw	0
  2681  00124E  6E29               	movwf	?___ftpack+1,c
  2682  001250  0E00               	movlw	0
  2683  001252  6E2A               	movwf	?___ftpack+2,c
  2684  001254  0012               	return	
  2685  001256  2A2B               	incf	___ftpack@exp,f,c
  2686  001258  90D8               	bcf	status,0,c
  2687  00125A  322A               	rrcf	___ftpack@arg+2,f,c
  2688  00125C  3229               	rrcf	___ftpack@arg+1,f,c
  2689  00125E  3228               	rrcf	___ftpack@arg,f,c
  2690  001260                     l407:
  2691  001260  0E00               	movlw	0
  2692  001262  1428               	andwf	___ftpack@arg,w,c
  2693  001264  6E2D               	movwf	??___ftpack& (0+255),c
  2694  001266  0E00               	movlw	0
  2695  001268  1429               	andwf	___ftpack@arg+1,w,c
  2696  00126A  6E2E               	movwf	(??___ftpack+1)& (0+255),c
  2697  00126C  0EFE               	movlw	254
  2698  00126E  142A               	andwf	___ftpack@arg+2,w,c
  2699  001270  6E2F               	movwf	(??___ftpack+2)& (0+255),c
  2700  001272  502D               	movf	??___ftpack,w,c
  2701  001274  102E               	iorwf	??___ftpack+1,w,c
  2702  001276  102F               	iorwf	??___ftpack+2,w,c
  2703  001278  B4D8               	btfsc	status,2,c
  2704  00127A  D00C               	goto	l410
  2705  00127C  D7EC               	goto	l408
  2706  00127E  2A2B               	incf	___ftpack@exp,f,c
  2707  001280  0E01               	movlw	1
  2708  001282  2628               	addwf	___ftpack@arg,f,c
  2709  001284  0E00               	movlw	0
  2710  001286  2229               	addwfc	___ftpack@arg+1,f,c
  2711  001288  0E00               	movlw	0
  2712  00128A  222A               	addwfc	___ftpack@arg+2,f,c
  2713  00128C  90D8               	bcf	status,0,c
  2714  00128E  322A               	rrcf	___ftpack@arg+2,f,c
  2715  001290  3229               	rrcf	___ftpack@arg+1,f,c
  2716  001292  3228               	rrcf	___ftpack@arg,f,c
  2717  001294                     l410:
  2718  001294  0E00               	movlw	0
  2719  001296  1428               	andwf	___ftpack@arg,w,c
  2720  001298  6E2D               	movwf	??___ftpack& (0+255),c
  2721  00129A  0E00               	movlw	0
  2722  00129C  1429               	andwf	___ftpack@arg+1,w,c
  2723  00129E  6E2E               	movwf	(??___ftpack+1)& (0+255),c
  2724  0012A0  0EFF               	movlw	255
  2725  0012A2  142A               	andwf	___ftpack@arg+2,w,c
  2726  0012A4  6E2F               	movwf	(??___ftpack+2)& (0+255),c
  2727  0012A6  502D               	movf	??___ftpack,w,c
  2728  0012A8  102E               	iorwf	??___ftpack+1,w,c
  2729  0012AA  102F               	iorwf	??___ftpack+2,w,c
  2730  0012AC  B4D8               	btfsc	status,2,c
  2731  0012AE  D006               	goto	l413
  2732  0012B0  D7E6               	goto	l411
  2733  0012B2  062B               	decf	___ftpack@exp,f,c
  2734  0012B4  90D8               	bcf	status,0,c
  2735  0012B6  3628               	rlcf	___ftpack@arg,f,c
  2736  0012B8  3629               	rlcf	___ftpack@arg+1,f,c
  2737  0012BA  362A               	rlcf	___ftpack@arg+2,f,c
  2738  0012BC                     l413:
  2739  0012BC  BE29               	btfsc	___ftpack@arg+1,7,c
  2740  0012BE  D003               	goto	u860
  2741  0012C0  0E02               	movlw	2
  2742  0012C2  602B               	cpfslt	___ftpack@exp,c
  2743  0012C4  D7F6               	goto	l414
  2744  0012C6                     u860:
  2745  0012C6  A02B               	btfss	___ftpack@exp,0,c
  2746  0012C8  9E29               	bcf	___ftpack@arg+1,7,c
  2747  0012CA  90D8               	bcf	status,0,c
  2748  0012CC  322B               	rrcf	___ftpack@exp,f,c
  2749  0012CE  502B               	movf	___ftpack@exp,w,c
  2750  0012D0  122A               	iorwf	___ftpack@arg+2,f,c
  2751  0012D2  502C               	movf	___ftpack@sign,w,c
  2752  0012D4  A4D8               	btfss	status,2,c
  2753  0012D6  8E2A               	bsf	___ftpack@arg+2,7,c
  2754  0012D8  C028  F028         	movff	___ftpack@arg,?___ftpack
  2755  0012DC  C029  F029         	movff	___ftpack@arg+1,?___ftpack+1
  2756  0012E0  C02A  F02A         	movff	___ftpack@arg+2,?___ftpack+2
  2757  0012E4  0012               	return	
  2758  0012E6                     __end_of___ftpack:
  2759                           	opt stack 0
  2760                           tblptru	equ	0xFF8
  2761                           tblptrh	equ	0xFF7
  2762                           tblptrl	equ	0xFF6
  2763                           tablat	equ	0xFF5
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1l	equ	0xFE1
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function ___awmod *****************
  2772 ;; Defined at:
  2773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  dividend        2   39[COMRAM] int 
  2776 ;;  divisor         2   41[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  sign            1   44[COMRAM] unsigned char 
  2779 ;;  counter         1   43[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  2   39[COMRAM] int 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2792 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:        6 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    2
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text10
  2804  0014A2                     __ptext10:
  2805                           	opt stack 0
  2806  0014A2                     ___awmod:
  2807                           	opt stack 28
  2808                           
  2809                           ;incstack = 0
  2810  0014A2  0E00               	movlw	0
  2811  0014A4  6E2D               	movwf	___awmod@sign,c
  2812  0014A6  AE29               	btfss	___awmod@dividend+1,7,c
  2813  0014A8  D006               	goto	l373
  2814  0014AA  6C28               	negf	___awmod@dividend,c
  2815  0014AC  1E29               	comf	___awmod@dividend+1,f,c
  2816  0014AE  B0D8               	btfsc	status,0,c
  2817  0014B0  2A29               	incf	___awmod@dividend+1,f,c
  2818  0014B2  0E01               	movlw	1
  2819  0014B4  6E2D               	movwf	___awmod@sign,c
  2820  0014B6                     l373:
  2821  0014B6  AE2B               	btfss	___awmod@divisor+1,7,c
  2822  0014B8  D004               	goto	l374
  2823  0014BA  6C2A               	negf	___awmod@divisor,c
  2824  0014BC  1E2B               	comf	___awmod@divisor+1,f,c
  2825  0014BE  B0D8               	btfsc	status,0,c
  2826  0014C0  2A2B               	incf	___awmod@divisor+1,f,c
  2827  0014C2                     l374:
  2828  0014C2  502A               	movf	___awmod@divisor,w,c
  2829  0014C4  102B               	iorwf	___awmod@divisor+1,w,c
  2830  0014C6  B4D8               	btfsc	status,2,c
  2831  0014C8  D018               	goto	l381
  2832  0014CA  0E01               	movlw	1
  2833  0014CC  6E2C               	movwf	___awmod@counter,c
  2834  0014CE  D004               	goto	l376
  2835  0014D0  90D8               	bcf	status,0,c
  2836  0014D2  362A               	rlcf	___awmod@divisor,f,c
  2837  0014D4  362B               	rlcf	___awmod@divisor+1,f,c
  2838  0014D6  2A2C               	incf	___awmod@counter,f,c
  2839  0014D8                     l376:
  2840  0014D8  AE2B               	btfss	___awmod@divisor+1,7,c
  2841  0014DA  D7FA               	goto	l377
  2842  0014DC                     u1340:
  2843  0014DC  502A               	movf	___awmod@divisor,w,c
  2844  0014DE  5C28               	subwf	___awmod@dividend,w,c
  2845  0014E0  502B               	movf	___awmod@divisor+1,w,c
  2846  0014E2  5829               	subwfb	___awmod@dividend+1,w,c
  2847  0014E4  A0D8               	btfss	status,0,c
  2848  0014E6  D004               	goto	l380
  2849  0014E8  502A               	movf	___awmod@divisor,w,c
  2850  0014EA  5E28               	subwf	___awmod@dividend,f,c
  2851  0014EC  502B               	movf	___awmod@divisor+1,w,c
  2852  0014EE  5A29               	subwfb	___awmod@dividend+1,f,c
  2853  0014F0                     l380:
  2854  0014F0  90D8               	bcf	status,0,c
  2855  0014F2  322B               	rrcf	___awmod@divisor+1,f,c
  2856  0014F4  322A               	rrcf	___awmod@divisor,f,c
  2857  0014F6  2E2C               	decfsz	___awmod@counter,f,c
  2858  0014F8  D7F1               	goto	u1340
  2859  0014FA                     l381:
  2860  0014FA  502D               	movf	___awmod@sign,w,c
  2861  0014FC  B4D8               	btfsc	status,2,c
  2862  0014FE  D004               	goto	l382
  2863  001500  6C28               	negf	___awmod@dividend,c
  2864  001502  1E29               	comf	___awmod@dividend+1,f,c
  2865  001504  B0D8               	btfsc	status,0,c
  2866  001506  2A29               	incf	___awmod@dividend+1,f,c
  2867  001508                     l382:
  2868  001508  C028  F028         	movff	___awmod@dividend,?___awmod
  2869  00150C  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  2870  001510  0012               	return	
  2871  001512                     __end_of___awmod:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           intcon	equ	0xFF2
  2878                           postinc0	equ	0xFEE
  2879                           wreg	equ	0xFE8
  2880                           postdec1	equ	0xFE5
  2881                           fsr1l	equ	0xFE1
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function ___awdiv *****************
  2885 ;; Defined at:
  2886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  dividend        2   39[COMRAM] int 
  2889 ;;  divisor         2   41[COMRAM] int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  quotient        2   45[COMRAM] int 
  2892 ;;  sign            1   44[COMRAM] unsigned char 
  2893 ;;  counter         1   43[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2   39[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         4       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        8 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    2
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text11
  2918  00141E                     __ptext11:
  2919                           	opt stack 0
  2920  00141E                     ___awdiv:
  2921                           	opt stack 28
  2922                           
  2923                           ;incstack = 0
  2924  00141E  0E00               	movlw	0
  2925  001420  6E2D               	movwf	___awdiv@sign,c
  2926  001422  AE2B               	btfss	___awdiv@divisor+1,7,c
  2927  001424  D006               	goto	l360
  2928  001426  6C2A               	negf	___awdiv@divisor,c
  2929  001428  1E2B               	comf	___awdiv@divisor+1,f,c
  2930  00142A  B0D8               	btfsc	status,0,c
  2931  00142C  2A2B               	incf	___awdiv@divisor+1,f,c
  2932  00142E  0E01               	movlw	1
  2933  001430  6E2D               	movwf	___awdiv@sign,c
  2934  001432                     l360:
  2935  001432  AE29               	btfss	___awdiv@dividend+1,7,c
  2936  001434  D006               	goto	l361
  2937  001436  6C28               	negf	___awdiv@dividend,c
  2938  001438  1E29               	comf	___awdiv@dividend+1,f,c
  2939  00143A  B0D8               	btfsc	status,0,c
  2940  00143C  2A29               	incf	___awdiv@dividend+1,f,c
  2941  00143E  0E01               	movlw	1
  2942  001440  1A2D               	xorwf	___awdiv@sign,f,c
  2943  001442                     l361:
  2944  001442  0E00               	movlw	0
  2945  001444  6E2F               	movwf	___awdiv@quotient+1,c
  2946  001446  0E00               	movlw	0
  2947  001448  6E2E               	movwf	___awdiv@quotient,c
  2948  00144A  502A               	movf	___awdiv@divisor,w,c
  2949  00144C  102B               	iorwf	___awdiv@divisor+1,w,c
  2950  00144E  B4D8               	btfsc	status,2,c
  2951  001450  D01C               	goto	l368
  2952  001452  0E01               	movlw	1
  2953  001454  6E2C               	movwf	___awdiv@counter,c
  2954  001456  D004               	goto	l363
  2955  001458  90D8               	bcf	status,0,c
  2956  00145A  362A               	rlcf	___awdiv@divisor,f,c
  2957  00145C  362B               	rlcf	___awdiv@divisor+1,f,c
  2958  00145E  2A2C               	incf	___awdiv@counter,f,c
  2959  001460                     l363:
  2960  001460  AE2B               	btfss	___awdiv@divisor+1,7,c
  2961  001462  D7FA               	goto	l364
  2962  001464                     u1280:
  2963  001464  90D8               	bcf	status,0,c
  2964  001466  362E               	rlcf	___awdiv@quotient,f,c
  2965  001468  362F               	rlcf	___awdiv@quotient+1,f,c
  2966  00146A  502A               	movf	___awdiv@divisor,w,c
  2967  00146C  5C28               	subwf	___awdiv@dividend,w,c
  2968  00146E  502B               	movf	___awdiv@divisor+1,w,c
  2969  001470  5829               	subwfb	___awdiv@dividend+1,w,c
  2970  001472  A0D8               	btfss	status,0,c
  2971  001474  D005               	goto	l367
  2972  001476  502A               	movf	___awdiv@divisor,w,c
  2973  001478  5E28               	subwf	___awdiv@dividend,f,c
  2974  00147A  502B               	movf	___awdiv@divisor+1,w,c
  2975  00147C  5A29               	subwfb	___awdiv@dividend+1,f,c
  2976  00147E  802E               	bsf	___awdiv@quotient,0,c
  2977  001480                     l367:
  2978  001480  90D8               	bcf	status,0,c
  2979  001482  322B               	rrcf	___awdiv@divisor+1,f,c
  2980  001484  322A               	rrcf	___awdiv@divisor,f,c
  2981  001486  2E2C               	decfsz	___awdiv@counter,f,c
  2982  001488  D7ED               	goto	u1280
  2983  00148A                     l368:
  2984  00148A  502D               	movf	___awdiv@sign,w,c
  2985  00148C  B4D8               	btfsc	status,2,c
  2986  00148E  D004               	goto	l369
  2987  001490  6C2E               	negf	___awdiv@quotient,c
  2988  001492  1E2F               	comf	___awdiv@quotient+1,f,c
  2989  001494  B0D8               	btfsc	status,0,c
  2990  001496  2A2F               	incf	___awdiv@quotient+1,f,c
  2991  001498                     l369:
  2992  001498  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  2993  00149C  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  2994  0014A0  0012               	return	
  2995  0014A2                     __end_of___awdiv:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           postdec1	equ	0xFE5
  3005                           fsr1l	equ	0xFE1
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _OpenXLCD *****************
  3009 ;; Defined at:
  3010 ;;		line 41 in file "nxlcd.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  lcdtype         1    wreg     unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  lcdtype         1   40[COMRAM] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0
  3025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3027 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3028 ;;Total ram usage:        1 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    4
  3031 ;; This function calls:
  3032 ;;		_BusyXLCD
  3033 ;;		_DelayPORXLCD
  3034 ;;		_DelayXLCD
  3035 ;;		_SetDDRamAddr
  3036 ;;		_WriteCmdXLCD
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text12
  3043  0012E6                     __ptext12:
  3044                           	opt stack 0
  3045  0012E6                     _OpenXLCD:
  3046                           	opt stack 26
  3047                           
  3048                           ;incstack = 0
  3049                           ;OpenXLCD@lcdtype stored from wreg
  3050  0012E6  6E29               	movwf	OpenXLCD@lcdtype,c
  3051                           
  3052                           ;nxlcd.c: 50: PORTD &= 0x0f;
  3053  0012E8  0E0F               	movlw	15
  3054  0012EA  1683               	andwf	3971,f,c	;volatile
  3055                           
  3056                           ;nxlcd.c: 51: TRISD &= 0x0F;
  3057  0012EC  0E0F               	movlw	15
  3058  0012EE  1695               	andwf	3989,f,c	;volatile
  3059                           
  3060                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  3061  0012F0  9496               	bcf	3990,2,c	;volatile
  3062                           
  3063                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  3064  0012F2  9096               	bcf	3990,0,c	;volatile
  3065                           
  3066                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  3067  0012F4  9296               	bcf	3990,1,c	;volatile
  3068                           
  3069                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  3070  0012F6  948D               	bcf	3981,2,c	;volatile
  3071                           
  3072                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  3073  0012F8  908D               	bcf	3981,0,c	;volatile
  3074                           
  3075                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  3076  0012FA  928D               	bcf	3981,1,c	;volatile
  3077                           
  3078                           ;nxlcd.c: 65: DelayPORXLCD();
  3079  0012FC  EC74  F00B         	call	_DelayPORXLCD	;wreg free
  3080                           
  3081                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  3082  001300  0E30               	movlw	48
  3083  001302  ECE7  F00A         	call	_WriteCmdXLCD
  3084                           
  3085                           ;nxlcd.c: 68: DelayXLCD();
  3086  001306  EC6B  F00B         	call	_DelayXLCD	;wreg free
  3087                           
  3088                           ;nxlcd.c: 69: DelayXLCD();
  3089  00130A  EC6B  F00B         	call	_DelayXLCD	;wreg free
  3090                           
  3091                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  3092  00130E  0E30               	movlw	48
  3093  001310  ECE7  F00A         	call	_WriteCmdXLCD
  3094                           
  3095                           ;nxlcd.c: 71: DelayXLCD();
  3096  001314  EC6B  F00B         	call	_DelayXLCD	;wreg free
  3097                           
  3098                           ;nxlcd.c: 72: DelayXLCD();
  3099  001318  EC6B  F00B         	call	_DelayXLCD	;wreg free
  3100                           
  3101                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  3102  00131C  0E32               	movlw	50
  3103  00131E  ECE7  F00A         	call	_WriteCmdXLCD
  3104  001322  EC06  F00B         	call	_BusyXLCD	;wreg free
  3105  001326  0900               	iorlw	0
  3106  001328  A4D8               	btfss	status,2,c
  3107  00132A  D7FB               	goto	l77
  3108  00132C                     u890:
  3109                           
  3110                           ;nxlcd.c: 79: while(BusyXLCD());
  3111  00132C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3112  001330  0900               	iorlw	0
  3113  001332  A4D8               	btfss	status,2,c
  3114  001334  D7FB               	goto	u890
  3115                           
  3116                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  3117  001336  5029               	movf	OpenXLCD@lcdtype,w,c
  3118  001338  ECE7  F00A         	call	_WriteCmdXLCD
  3119  00133C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3120  001340  0900               	iorlw	0
  3121  001342  A4D8               	btfss	status,2,c
  3122  001344  D7FB               	goto	l83
  3123                           
  3124                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3125  001346  0E08               	movlw	8
  3126  001348  ECE7  F00A         	call	_WriteCmdXLCD
  3127  00134C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3128  001350  0900               	iorlw	0
  3129  001352  A4D8               	btfss	status,2,c
  3130  001354  D7FB               	goto	l86
  3131                           
  3132                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3133  001356  0E0F               	movlw	15
  3134  001358  ECE7  F00A         	call	_WriteCmdXLCD
  3135  00135C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3136  001360  0900               	iorlw	0
  3137  001362  A4D8               	btfss	status,2,c
  3138  001364  D7FB               	goto	l89
  3139                           
  3140                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  3141  001366  0E01               	movlw	1
  3142  001368  ECE7  F00A         	call	_WriteCmdXLCD
  3143  00136C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3144  001370  0900               	iorlw	0
  3145  001372  A4D8               	btfss	status,2,c
  3146  001374  D7FB               	goto	l92
  3147                           
  3148                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  3149  001376  0E04               	movlw	4
  3150  001378  ECE7  F00A         	call	_WriteCmdXLCD
  3151  00137C  EC06  F00B         	call	_BusyXLCD	;wreg free
  3152  001380  0900               	iorlw	0
  3153  001382  A4D8               	btfss	status,2,c
  3154  001384  D7FB               	goto	l95
  3155                           
  3156                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  3157  001386  0E80               	movlw	128
  3158  001388  EC89  F00A         	call	_SetDDRamAddr
  3159  00138C  0012               	return	
  3160  00138E                     __end_of_OpenXLCD:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postdec1	equ	0xFE5
  3170                           fsr1l	equ	0xFE1
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _WriteCmdXLCD *****************
  3174 ;; Defined at:
  3175 ;;		line 388 in file "nxlcd.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  cmd             1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  cmd             1   39[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    3
  3196 ;; This function calls:
  3197 ;;		_DelayFor18TCY
  3198 ;; This function is called by:
  3199 ;;		_OpenXLCD
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text13
  3205  0015CE                     __ptext13:
  3206                           	opt stack 0
  3207  0015CE                     _WriteCmdXLCD:
  3208                           	opt stack 27
  3209                           
  3210                           ;incstack = 0
  3211                           ;WriteCmdXLCD@cmd stored from wreg
  3212  0015CE  6E28               	movwf	WriteCmdXLCD@cmd,c
  3213                           
  3214                           ;nxlcd.c: 403: TRISD &= 0x0f;
  3215  0015D0  0E0F               	movlw	15
  3216  0015D2  1695               	andwf	3989,f,c	;volatile
  3217                           
  3218                           ;nxlcd.c: 404: PORTD &= 0x0f;
  3219  0015D4  0E0F               	movlw	15
  3220  0015D6  1683               	andwf	3971,f,c	;volatile
  3221                           
  3222                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  3223  0015D8  5028               	movf	WriteCmdXLCD@cmd,w,c
  3224  0015DA  0BF0               	andlw	240
  3225  0015DC  1283               	iorwf	3971,f,c	;volatile
  3226                           
  3227                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  3228  0015DE  948D               	bcf	3981,2,c	;volatile
  3229                           
  3230                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  3231  0015E0  908D               	bcf	3981,0,c	;volatile
  3232                           
  3233                           ;nxlcd.c: 413: DelayFor18TCY();
  3234  0015E2  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3235                           
  3236                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  3237  0015E6  828D               	bsf	3981,1,c	;volatile
  3238                           
  3239                           ;nxlcd.c: 415: DelayFor18TCY();
  3240  0015E8  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3241                           
  3242                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  3243  0015EC  928D               	bcf	3981,1,c	;volatile
  3244                           
  3245                           ;nxlcd.c: 418: PORTD &= 0x0f;
  3246  0015EE  0E0F               	movlw	15
  3247  0015F0  1683               	andwf	3971,f,c	;volatile
  3248                           
  3249                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  3250  0015F2  3828               	swapf	WriteCmdXLCD@cmd,w,c
  3251  0015F4  0BF0               	andlw	240
  3252  0015F6  0BF0               	andlw	240
  3253  0015F8  1283               	iorwf	3971,f,c	;volatile
  3254                           
  3255                           ;nxlcd.c: 424: DelayFor18TCY();
  3256  0015FA  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3257                           
  3258                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  3259  0015FE  828D               	bsf	3981,1,c	;volatile
  3260                           
  3261                           ;nxlcd.c: 426: DelayFor18TCY();
  3262  001600  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3263                           
  3264                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  3265  001604  928D               	bcf	3981,1,c	;volatile
  3266                           
  3267                           ;nxlcd.c: 429: TRISD |= 0xf0;
  3268  001606  0EF0               	movlw	240
  3269  001608  1295               	iorwf	3989,f,c	;volatile
  3270  00160A  0012               	return	
  3271  00160C                     __end_of_WriteCmdXLCD:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1l	equ	0xFE1
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _SetDDRamAddr *****************
  3285 ;; Defined at:
  3286 ;;		line 171 in file "nxlcd.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  DDaddr          1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  DDaddr          1   39[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    3
  3307 ;; This function calls:
  3308 ;;		_DelayFor18TCY
  3309 ;; This function is called by:
  3310 ;;		_OpenXLCD
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text14
  3315  001512                     __ptext14:
  3316                           	opt stack 0
  3317  001512                     _SetDDRamAddr:
  3318                           	opt stack 26
  3319                           
  3320                           ;incstack = 0
  3321                           ;SetDDRamAddr@DDaddr stored from wreg
  3322  001512  6E28               	movwf	SetDDRamAddr@DDaddr,c
  3323                           
  3324                           ;nxlcd.c: 186: TRISD &= 0x0f;
  3325  001514  0E0F               	movlw	15
  3326  001516  1695               	andwf	3989,f,c	;volatile
  3327                           
  3328                           ;nxlcd.c: 187: PORTD &= 0x0f;
  3329  001518  0E0F               	movlw	15
  3330  00151A  1683               	andwf	3971,f,c	;volatile
  3331                           
  3332                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  3333  00151C  5028               	movf	SetDDRamAddr@DDaddr,w,c
  3334  00151E  0980               	iorlw	128
  3335  001520  0BF0               	andlw	240
  3336  001522  1283               	iorwf	3971,f,c	;volatile
  3337                           
  3338                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  3339  001524  948D               	bcf	3981,2,c	;volatile
  3340                           
  3341                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  3342  001526  908D               	bcf	3981,0,c	;volatile
  3343                           
  3344                           ;nxlcd.c: 196: DelayFor18TCY();
  3345  001528  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3346                           
  3347                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  3348  00152C  828D               	bsf	3981,1,c	;volatile
  3349                           
  3350                           ;nxlcd.c: 198: DelayFor18TCY();
  3351  00152E  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3352                           
  3353                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  3354  001532  928D               	bcf	3981,1,c	;volatile
  3355                           
  3356                           ;nxlcd.c: 201: PORTD &= 0x0f;
  3357  001534  0E0F               	movlw	15
  3358  001536  1683               	andwf	3971,f,c	;volatile
  3359                           
  3360                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  3361  001538  3828               	swapf	SetDDRamAddr@DDaddr,w,c
  3362  00153A  0BF0               	andlw	240
  3363  00153C  0BF0               	andlw	240
  3364  00153E  1283               	iorwf	3971,f,c	;volatile
  3365                           
  3366                           ;nxlcd.c: 207: DelayFor18TCY();
  3367  001540  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3368                           
  3369                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  3370  001544  828D               	bsf	3981,1,c	;volatile
  3371                           
  3372                           ;nxlcd.c: 209: DelayFor18TCY();
  3373  001546  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3374                           
  3375                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  3376  00154A  928D               	bcf	3981,1,c	;volatile
  3377                           
  3378                           ;nxlcd.c: 212: TRISD |= 0xf0;
  3379  00154C  0EF0               	movlw	240
  3380  00154E  1295               	iorwf	3989,f,c	;volatile
  3381  001550  0012               	return	
  3382  001552                     __end_of_SetDDRamAddr:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           intcon	equ	0xFF2
  3389                           postinc0	equ	0xFEE
  3390                           wreg	equ	0xFE8
  3391                           postdec1	equ	0xFE5
  3392                           fsr1l	equ	0xFE1
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _DelayXLCD *****************
  3396 ;; Defined at:
  3397 ;;		line 22 in file "nxlcd.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3413 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3414 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_OpenXLCD
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text15
  3426  0016D6                     __ptext15:
  3427                           	opt stack 0
  3428  0016D6                     _DelayXLCD:
  3429                           	opt stack 27
  3430                           
  3431                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  3432                           
  3433                           ;incstack = 0
  3434  0016D6  0E21               	movlw	33
  3435  0016D8  6E28               	movwf	??_DelayXLCD& (0+255),c
  3436  0016DA  0E76               	movlw	118
  3437  0016DC                     u1607:
  3438  0016DC  2EE8               	decfsz	wreg,f,c
  3439  0016DE  D7FE               	bra	u1607
  3440  0016E0  2E28               	decfsz	??_DelayXLCD& (0+255),f,c
  3441  0016E2  D7FC               	bra	u1607
  3442  0016E4  D000               	nop2	
  3443  0016E6  0012               	return		;funcret
  3444  0016E8                     __end_of_DelayXLCD:
  3445                           	opt stack 0
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           intcon	equ	0xFF2
  3451                           postinc0	equ	0xFEE
  3452                           wreg	equ	0xFE8
  3453                           postdec1	equ	0xFE5
  3454                           fsr1l	equ	0xFE1
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _DelayPORXLCD *****************
  3458 ;; Defined at:
  3459 ;;		line 17 in file "nxlcd.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3475 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3476 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    2
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_OpenXLCD
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text16
  3488  0016E8                     __ptext16:
  3489                           	opt stack 0
  3490  0016E8                     _DelayPORXLCD:
  3491                           	opt stack 27
  3492                           
  3493                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  3494                           
  3495                           ;incstack = 0
  3496  0016E8  0E62               	movlw	98
  3497  0016EA  6E28               	movwf	??_DelayPORXLCD& (0+255),c
  3498  0016EC  0E66               	movlw	102
  3499  0016EE                     u1617:
  3500  0016EE  2EE8               	decfsz	wreg,f,c
  3501  0016F0  D7FE               	bra	u1617
  3502  0016F2  2E28               	decfsz	??_DelayPORXLCD& (0+255),f,c
  3503  0016F4  D7FC               	bra	u1617
  3504  0016F6  0012               	return		;funcret
  3505  0016F8                     __end_of_DelayPORXLCD:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           intcon	equ	0xFF2
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           postdec1	equ	0xFE5
  3515                           fsr1l	equ	0xFE1
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _BusyXLCD *****************
  3519 ;; Defined at:
  3520 ;;		line 227 in file "nxlcd.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      unsigned char 
  3527 ;; Registers used:
  3528 ;;		wreg, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    3
  3541 ;; This function calls:
  3542 ;;		_DelayFor18TCY
  3543 ;; This function is called by:
  3544 ;;		_OpenXLCD
  3545 ;;		_putrsXLCD
  3546 ;;		_putsXLCD
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text17
  3551  00160C                     __ptext17:
  3552                           	opt stack 0
  3553  00160C                     _BusyXLCD:
  3554                           	opt stack 26
  3555                           
  3556                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  3557                           
  3558                           ;incstack = 0
  3559  00160C  848D               	bsf	3981,2,c	;volatile
  3560                           
  3561                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  3562  00160E  908D               	bcf	3981,0,c	;volatile
  3563                           
  3564                           ;nxlcd.c: 231: DelayFor18TCY();
  3565  001610  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3566                           
  3567                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  3568  001614  828D               	bsf	3981,1,c	;volatile
  3569                           
  3570                           ;nxlcd.c: 233: DelayFor18TCY();
  3571  001616  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3572                           
  3573                           ;nxlcd.c: 249: if(PORTD&0x80)
  3574  00161A  AE83               	btfss	3971,7,c	;volatile
  3575  00161C  D00A               	goto	l106
  3576                           
  3577                           ;nxlcd.c: 253: {
  3578                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  3579  00161E  928D               	bcf	3981,1,c	;volatile
  3580                           
  3581                           ;nxlcd.c: 255: DelayFor18TCY();
  3582  001620  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3583                           
  3584                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  3585  001624  828D               	bsf	3981,1,c	;volatile
  3586                           
  3587                           ;nxlcd.c: 257: DelayFor18TCY();
  3588  001626  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3589                           
  3590                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  3591  00162A  928D               	bcf	3981,1,c	;volatile
  3592                           
  3593                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  3594  00162C  948D               	bcf	3981,2,c	;volatile
  3595                           
  3596                           ;nxlcd.c: 260: return 1;
  3597  00162E  0E01               	movlw	1
  3598                           
  3599                           ;nxlcd.c: 261: }
  3600  001630  0012               	return	
  3601  001632                     l106:
  3602                           
  3603                           ;nxlcd.c: 262: else
  3604                           ;nxlcd.c: 263: {
  3605                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  3606  001632  928D               	bcf	3981,1,c	;volatile
  3607                           
  3608                           ;nxlcd.c: 265: DelayFor18TCY();
  3609  001634  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3610                           
  3611                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  3612  001638  828D               	bsf	3981,1,c	;volatile
  3613                           
  3614                           ;nxlcd.c: 267: DelayFor18TCY();
  3615  00163A  EC7C  F00B         	call	_DelayFor18TCY	;wreg free
  3616                           
  3617                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  3618  00163E  928D               	bcf	3981,1,c	;volatile
  3619                           
  3620                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  3621  001640  948D               	bcf	3981,2,c	;volatile
  3622                           
  3623                           ;nxlcd.c: 270: return 0;
  3624  001642  0E00               	movlw	0
  3625  001644  0012               	return	
  3626  001646                     __end_of_BusyXLCD:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           intcon	equ	0xFF2
  3633                           postinc0	equ	0xFEE
  3634                           wreg	equ	0xFE8
  3635                           postdec1	equ	0xFE5
  3636                           fsr1l	equ	0xFE1
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function _DelayFor18TCY *****************
  3640 ;; Defined at:
  3641 ;;		line 12 in file "nxlcd.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_SetDDRamAddr
  3666 ;;		_BusyXLCD
  3667 ;;		_WriteCmdXLCD
  3668 ;;		_WriteDataXLCD
  3669 ;;		_SetCGRamAddr
  3670 ;;		_ReadAddrXLCD
  3671 ;;		_ReadDataXLCD
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text18
  3676  0016F8                     __ptext18:
  3677                           	opt stack 0
  3678  0016F8                     _DelayFor18TCY:
  3679                           	opt stack 26
  3680                           
  3681                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  3682                           
  3683                           ;incstack = 0
  3684  0016F8  0E21               	movlw	33
  3685  0016FA                     u1627:
  3686  0016FA  2EE8               	decfsz	wreg,f,c
  3687  0016FC  D7FE               	bra	u1627
  3688  0016FE  F000               	nop	
  3689  001700  0012               	return		;funcret
  3690  001702                     __end_of_DelayFor18TCY:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           intcon	equ	0xFF2
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function _LowPriorityISR *****************
  3704 ;; Defined at:
  3705 ;;		line 49 in file "newmain.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3721 ;;      Temps:         21       0       0       0       0       0       0       0       0
  3722 ;;      Totals:        21       0       0       0       0       0       0       0       0
  3723 ;;Total ram usage:       21 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		Interrupt level 1
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	intcodelo
  3734  000018                     __pintcodelo:
  3735                           	opt stack 0
  3736  000018                     _LowPriorityISR:
  3737                           	opt stack 26
  3738                           
  3739                           ;incstack = 0
  3740  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3741  00001A  CFD8 F013          	movff	status,??_LowPriorityISR
  3742  00001E  CFE8 F014          	movff	wreg,??_LowPriorityISR+1
  3743  000022  CFE0 F015          	movff	bsr,??_LowPriorityISR+2
  3744  000026  CFFA F016          	movff	pclath,??_LowPriorityISR+3
  3745  00002A  CFFB F017          	movff	pclatu,??_LowPriorityISR+4
  3746  00002E  CFE9 F018          	movff	fsr0l,??_LowPriorityISR+5
  3747  000032  CFEA F019          	movff	fsr0h,??_LowPriorityISR+6
  3748  000036  CFE1 F01A          	movff	fsr1l,??_LowPriorityISR+7
  3749  00003A  CFE2 F01B          	movff	fsr1h,??_LowPriorityISR+8
  3750  00003E  CFD9 F01C          	movff	fsr2l,??_LowPriorityISR+9
  3751  000042  CFDA F01D          	movff	fsr2h,??_LowPriorityISR+10
  3752  000046  CFF3 F01E          	movff	prodl,??_LowPriorityISR+11
  3753  00004A  CFF4 F01F          	movff	prodh,??_LowPriorityISR+12
  3754  00004E  CFF6 F020          	movff	tblptrl,??_LowPriorityISR+13
  3755  000052  CFF7 F021          	movff	tblptrh,??_LowPriorityISR+14
  3756  000056  CFF8 F022          	movff	tblptru,??_LowPriorityISR+15
  3757  00005A  CFF5 F023          	movff	tablat,??_LowPriorityISR+16
  3758  00005E  C037  F024         	movff	btemp,??_LowPriorityISR+17
  3759  000062  C038  F025         	movff	btemp+1,??_LowPriorityISR+18
  3760  000066  C039  F026         	movff	btemp+2,??_LowPriorityISR+19
  3761  00006A  C03A  F027         	movff	btemp+3,??_LowPriorityISR+20
  3762                           
  3763                           ;newmain.c: 50: PIR1bits.ADIF = 0;
  3764  00006E  9C9E               	bcf	3998,6,c	;volatile
  3765                           
  3766                           ;newmain.c: 51: flagAdFim = 1;
  3767  000070  0E00               	movlw	0
  3768  000072  0100               	movlb	0	; () banked
  3769  000074  6FA0               	movwf	(_flagAdFim+1)& (0+255),b
  3770  000076  0E01               	movlw	1
  3771  000078  6F9F               	movwf	_flagAdFim& (0+255),b
  3772                           
  3773                           ; BSR set to: 0
  3774  00007A  C027  F03A         	movff	??_LowPriorityISR+20,btemp+3
  3775  00007E  C026  F039         	movff	??_LowPriorityISR+19,btemp+2
  3776  000082  C025  F038         	movff	??_LowPriorityISR+18,btemp+1
  3777  000086  C024  F037         	movff	??_LowPriorityISR+17,btemp
  3778  00008A  C023  FFF5         	movff	??_LowPriorityISR+16,tablat
  3779  00008E  C022  FFF8         	movff	??_LowPriorityISR+15,tblptru
  3780  000092  C021  FFF7         	movff	??_LowPriorityISR+14,tblptrh
  3781  000096  C020  FFF6         	movff	??_LowPriorityISR+13,tblptrl
  3782  00009A  C01F  FFF4         	movff	??_LowPriorityISR+12,prodh
  3783  00009E  C01E  FFF3         	movff	??_LowPriorityISR+11,prodl
  3784  0000A2  C01D  FFDA         	movff	??_LowPriorityISR+10,fsr2h
  3785  0000A6  C01C  FFD9         	movff	??_LowPriorityISR+9,fsr2l
  3786  0000AA  C01B  FFE2         	movff	??_LowPriorityISR+8,fsr1h
  3787  0000AE  C01A  FFE1         	movff	??_LowPriorityISR+7,fsr1l
  3788  0000B2  C019  FFEA         	movff	??_LowPriorityISR+6,fsr0h
  3789  0000B6  C018  FFE9         	movff	??_LowPriorityISR+5,fsr0l
  3790  0000BA  C017  FFFB         	movff	??_LowPriorityISR+4,pclatu
  3791  0000BE  C016  FFFA         	movff	??_LowPriorityISR+3,pclath
  3792  0000C2  C015  FFE0         	movff	??_LowPriorityISR+2,bsr
  3793  0000C6  C014  FFE8         	movff	??_LowPriorityISR+1,wreg
  3794  0000CA  C013  FFD8         	movff	??_LowPriorityISR,status
  3795  0000CE  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3796  0000D0  0010               	retfie	
  3797  0000D2                     __end_of_LowPriorityISR:
  3798                           	opt stack 0
  3799                           pclatu	equ	0xFFB
  3800                           pclath	equ	0xFFA
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           prodh	equ	0xFF4
  3806                           prodl	equ	0xFF3
  3807                           intcon	equ	0xFF2
  3808                           postinc0	equ	0xFEE
  3809                           fsr0h	equ	0xFEA
  3810                           fsr0l	equ	0xFE9
  3811                           wreg	equ	0xFE8
  3812                           postdec1	equ	0xFE5
  3813                           fsr1h	equ	0xFE2
  3814                           fsr1l	equ	0xFE1
  3815                           bsr	equ	0xFE0
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function _HighPriorityISR *****************
  3821 ;; Defined at:
  3822 ;;		line 27 in file "newmain.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3838 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3839 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:       18 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		Interrupt level 2
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	intcode
  3850  000008                     __pintcode:
  3851                           	opt stack 0
  3852  000008                     _HighPriorityISR:
  3853                           	opt stack 26
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;incstack = 0
  3857  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3858  00000A  EDB6  F008         	call	int_func,f	;refresh shadow registers
  3859                           pclatu	equ	0xFFB
  3860                           pclath	equ	0xFFA
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           intcon	equ	0xFF2
  3868                           postinc0	equ	0xFEE
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           bsr	equ	0xFE0
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880                           	psect	intcode_body
  3881  00116C                     __pintcode_body:
  3882                           	opt stack 26
  3883  00116C                     int_func:
  3884                           	opt stack 26
  3885  00116C  0006               	pop		; remove dummy address from shadow register refresh
  3886  00116E  CFFA F001          	movff	pclath,??_HighPriorityISR
  3887  001172  CFFB F002          	movff	pclatu,??_HighPriorityISR+1
  3888  001176  CFE9 F003          	movff	fsr0l,??_HighPriorityISR+2
  3889  00117A  CFEA F004          	movff	fsr0h,??_HighPriorityISR+3
  3890  00117E  CFE1 F005          	movff	fsr1l,??_HighPriorityISR+4
  3891  001182  CFE2 F006          	movff	fsr1h,??_HighPriorityISR+5
  3892  001186  CFD9 F007          	movff	fsr2l,??_HighPriorityISR+6
  3893  00118A  CFDA F008          	movff	fsr2h,??_HighPriorityISR+7
  3894  00118E  CFF3 F009          	movff	prodl,??_HighPriorityISR+8
  3895  001192  CFF4 F00A          	movff	prodh,??_HighPriorityISR+9
  3896  001196  CFF6 F00B          	movff	tblptrl,??_HighPriorityISR+10
  3897  00119A  CFF7 F00C          	movff	tblptrh,??_HighPriorityISR+11
  3898  00119E  CFF8 F00D          	movff	tblptru,??_HighPriorityISR+12
  3899  0011A2  CFF5 F00E          	movff	tablat,??_HighPriorityISR+13
  3900  0011A6  C037  F00F         	movff	btemp,??_HighPriorityISR+14
  3901  0011AA  C038  F010         	movff	btemp+1,??_HighPriorityISR+15
  3902  0011AE  C039  F011         	movff	btemp+2,??_HighPriorityISR+16
  3903  0011B2  C03A  F012         	movff	btemp+3,??_HighPriorityISR+17
  3904                           
  3905                           ;newmain.c: 28: PIR2bits.TMR3IF = 0;
  3906  0011B6  92A1               	bcf	4001,1,c	;volatile
  3907                           
  3908                           ;newmain.c: 29: if (contRa3 < 49) {
  3909  0011B8  0100               	movlb	0	; () banked
  3910  0011BA  BF9E               	btfsc	(_contRa3+1)& (0+255),7,b
  3911  0011BC  D006               	goto	i2u152_40
  3912  0011BE  519E               	movf	(_contRa3+1)& (0+255),w,b
  3913  0011C0  E109               	bnz	i2l173
  3914  0011C2  0E31               	movlw	49
  3915  0011C4  5D9D               	subwf	_contRa3& (0+255),w,b
  3916  0011C6  B0D8               	btfsc	status,0,c
  3917  0011C8  D005               	goto	i2l173
  3918  0011CA                     i2u152_40:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;newmain.c: 30: ADCON0bits.CHS3 = 0;
  3922  0011CA  9AC2               	bcf	4034,5,c	;volatile
  3923                           
  3924                           ;newmain.c: 31: ADCON0bits.CHS2 = 0;
  3925  0011CC  98C2               	bcf	4034,4,c	;volatile
  3926                           
  3927                           ;newmain.c: 32: ADCON0bits.CHS1 = 0;
  3928  0011CE  96C2               	bcf	4034,3,c	;volatile
  3929                           
  3930                           ;newmain.c: 33: ADCON0bits.CHS0 = 0;
  3931  0011D0  94C2               	bcf	4034,2,c	;volatile
  3932  0011D2  D004               	goto	L1
  3933  0011D4                     i2l173:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;newmain.c: 37: ADCON0bits.CHS3 = 0;
  3937  0011D4  9AC2               	bcf	4034,5,c	;volatile
  3938                           
  3939                           ;newmain.c: 38: ADCON0bits.CHS2 = 0;
  3940  0011D6  98C2               	bcf	4034,4,c	;volatile
  3941                           
  3942                           ;newmain.c: 39: ADCON0bits.CHS1 = 1;
  3943  0011D8  86C2               	bsf	4034,3,c	;volatile
  3944                           
  3945                           ;newmain.c: 40: ADCON0bits.CHS0 = 1;
  3946  0011DA  84C2               	bsf	4034,2,c	;volatile
  3947  0011DC                     L1:
  3948                           
  3949                           ;newmain.c: 41: ADCON1bits.VCFG0 = 0;
  3950  0011DC  98C1               	bcf	4033,4,c	;volatile
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;newmain.c: 42: }
  3954                           ;newmain.c: 43: TMR3H = 0xF2;
  3955                           
  3956                           ; BSR set to: 0
  3957  0011DE  0EF2               	movlw	242
  3958  0011E0  6EB3               	movwf	4019,c	;volatile
  3959                           
  3960                           ;newmain.c: 44: TMR3L = 0xFB;
  3961  0011E2  0EFB               	movlw	251
  3962  0011E4  6EB2               	movwf	4018,c	;volatile
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;newmain.c: 45: ADCON0bits.GODONE = 1;
  3966  0011E6  82C2               	bsf	4034,1,c	;volatile
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;newmain.c: 46: contRa3++;
  3970  0011E8  4B9D               	infsnz	_contRa3& (0+255),f,b
  3971  0011EA  2B9E               	incf	(_contRa3+1)& (0+255),f,b
  3972                           
  3973                           ; BSR set to: 0
  3974  0011EC  C012  F03A         	movff	??_HighPriorityISR+17,btemp+3
  3975  0011F0  C011  F039         	movff	??_HighPriorityISR+16,btemp+2
  3976  0011F4  C010  F038         	movff	??_HighPriorityISR+15,btemp+1
  3977  0011F8  C00F  F037         	movff	??_HighPriorityISR+14,btemp
  3978  0011FC  C00E  FFF5         	movff	??_HighPriorityISR+13,tablat
  3979  001200  C00D  FFF8         	movff	??_HighPriorityISR+12,tblptru
  3980  001204  C00C  FFF7         	movff	??_HighPriorityISR+11,tblptrh
  3981  001208  C00B  FFF6         	movff	??_HighPriorityISR+10,tblptrl
  3982  00120C  C00A  FFF4         	movff	??_HighPriorityISR+9,prodh
  3983  001210  C009  FFF3         	movff	??_HighPriorityISR+8,prodl
  3984  001214  C008  FFDA         	movff	??_HighPriorityISR+7,fsr2h
  3985  001218  C007  FFD9         	movff	??_HighPriorityISR+6,fsr2l
  3986  00121C  C006  FFE2         	movff	??_HighPriorityISR+5,fsr1h
  3987  001220  C005  FFE1         	movff	??_HighPriorityISR+4,fsr1l
  3988  001224  C004  FFEA         	movff	??_HighPriorityISR+3,fsr0h
  3989  001228  C003  FFE9         	movff	??_HighPriorityISR+2,fsr0l
  3990  00122C  C002  FFFB         	movff	??_HighPriorityISR+1,pclatu
  3991  001230  C001  FFFA         	movff	??_HighPriorityISR,pclath
  3992  001234  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3993  001236  0011               	retfie		f
  3994  001238                     __end_of_HighPriorityISR:
  3995                           	opt stack 0
  3996                           pclatu	equ	0xFFB
  3997                           pclath	equ	0xFFA
  3998                           tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           intcon	equ	0xFF2
  4005                           postinc0	equ	0xFEE
  4006                           fsr0h	equ	0xFEA
  4007                           fsr0l	equ	0xFE9
  4008                           wreg	equ	0xFE8
  4009                           postdec1	equ	0xFE5
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           bsr	equ	0xFE0
  4013                           fsr2h	equ	0xFDA
  4014                           fsr2l	equ	0xFD9
  4015                           status	equ	0xFD8
  4016                           pclatu	equ	0xFFB
  4017                           pclath	equ	0xFFA
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           postinc0	equ	0xFEE
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           wreg	equ	0xFE8
  4029                           postdec1	equ	0xFE5
  4030                           fsr1h	equ	0xFE2
  4031                           fsr1l	equ	0xFE1
  4032                           bsr	equ	0xFE0
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037                           	psect	rparam
  4038  0000                     pclatu	equ	0xFFB
  4039                           pclath	equ	0xFFA
  4040                           tblptru	equ	0xFF8
  4041                           tblptrh	equ	0xFF7
  4042                           tblptrl	equ	0xFF6
  4043                           tablat	equ	0xFF5
  4044                           prodh	equ	0xFF4
  4045                           prodl	equ	0xFF3
  4046                           intcon	equ	0xFF2
  4047                           postinc0	equ	0xFEE
  4048                           fsr0h	equ	0xFEA
  4049                           fsr0l	equ	0xFE9
  4050                           wreg	equ	0xFE8
  4051                           postdec1	equ	0xFE5
  4052                           fsr1h	equ	0xFE2
  4053                           fsr1l	equ	0xFE1
  4054                           bsr	equ	0xFE0
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059                           	psect	temp
  4060  000037                     btemp:
  4061                           	opt stack 0
  4062  000037                     	ds	1
  4063  0000                     int$flags	set	btemp
  4064  0000                     wtemp6	set	btemp+1
  4065                           pclatu	equ	0xFFB
  4066                           pclath	equ	0xFFA
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           postinc0	equ	0xFEE
  4075                           fsr0h	equ	0xFEA
  4076                           fsr0l	equ	0xFE9
  4077                           wreg	equ	0xFE8
  4078                           postdec1	equ	0xFE5
  4079                           fsr1h	equ	0xFE2
  4080                           fsr1l	equ	0xFE1
  4081                           bsr	equ	0xFE0
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8


Data Sizes:
    Strings     27
    Constant    0
    Data        9
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      54
    BANK0           160     35      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[2]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _putrsXLCD->_WriteDataXLCD
    ___fttol->___ftmul
    ___ftneg->___ftpack
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _LowPriorityISR in COMRAM

    None.

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul
    ___ftadd->___ftmul

Critical Paths under _LowPriorityISR in BANK0

    None.

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   15294
                                             27 BANK0      8     8      0
                           _OpenXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     621
                                             40 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                             12 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     197
                                             47 COMRAM     3     0      3
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4095
                                             51 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     288
                                             39 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4127
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2746
                                             47 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2427
                                             39 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                             39 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             40 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             39 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriorityISR                                      21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighPriorityISR                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___ftpack (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _LowPriorityISR (ROOT)

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      4C       5       47.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      20        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Nov 29 18:27:28 2023

                       _A 00A9                         _B 00A6                        l83 133C  
                      l92 136C                        l77 1322                        l86 134C  
                      l95 137C                        l89 135C              ___awdiv@sign 002D  
                      _dc 00A1                        bsr 000FE0              ___ftadd@exp1 0077  
            ___ftadd@exp2 0076              ___ftadd@sign 0075                       l106 1632  
                     l132 169E                       l133 1680                       l410 1294  
                     l411 127E                       l413 12BC                       l414 12B2  
                     l510 1014                       l407 1260                       l360 1432  
                     l408 1256                       l361 1442                       l185 08B4  
                     l442 0E4E                       l186 0AD6                       l363 1460  
                     l515 1048                       l507 0FAC                       l187 0A4A  
                     l364 1458                       l380 14F0                       l452 0EAA  
                     l516 103C                       l188 0A5C                       l381 14FA  
                     l373 14B6                       l461 0EE8                       l453 0EA0  
                     l509 1024                       l382 1508                       l374 14C2  
                     l462 0EDE                       l438 0E24                       l518 1064  
                     l367 1480                       l447 0EB4                       l368 148A  
                     l376 14D8                       l464 0F0C                       l480 13EE  
                     l369 1498                       l377 14D0                       l465 0F28  
                     l466 0F58                       l490 110A                       l388 165A  
                     l492 1122                       l493 1132                       l486 10A0  
                     l479 13BE                       l488 10C8                       l489 10FA  
                     l497 16C8                       _PR2 000FCB                       u820 1248  
                     u860 12C6   __end_of_HighPriorityISR 1238                       u890 132C  
                     u981 0DE2                       u991 0DF6     __size_of_WriteCmdXLCD 003E  
            ___awmod@sign 002D                       wreg 000FE8              __CFG_FOSC$HS 000000  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      l1616 141A  
                    STR_1 0809                      STR_2 081A                      STR_3 0810  
                    STR_4 0801                      STR_5 081A                      STR_6 0816  
                    STR_7 0818                      u1020 0E16                      u1120 0EBC  
                    u1050 0E40                      u1211 10B0                      u1150 0EF0  
                    u1080 0E7E                      u1340 14DC                      u1421 0F90  
                    u1191 1088                      u1280 1464                      u1440 0FCA  
                    u1540 08CE                      u1445 0FC2                      u1541 08CC  
                    u1607 16DC                      u1480 104E                      u1617 16EE  
                    u1627 16FA                      u1580 0AEC             __CFG_DEBUG$ON 000000  
                    u1597 089E                      _main 081E                      _erro 0092  
            ___ftpack@arg 0028              ___ftpack@exp 002B                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0037  
  __size_of_WriteDataXLCD 003E                      prodh 000FF4                      prodl 000FF3  
                    start 00D2             __CFG_MCLRE$ON 000000              ___ftmul@cntr 006A  
            ___param_bank 000000              ___ftmul@sign 006B              ___fttol@exp1 007A  
            ___fttol@lval 0076              _WriteCmdXLCD 15CE             ?_SetDDRamAddr 0001  
                   ?_main 0001           __end_of___awdiv 14A2           __end_of___ftadd 0F7E  
         __end_of___awmod 1512           __end_of___ftneg 16D6           __end_of___ftmul 116C  
         ___awdiv@divisor 002A           __end_of___fttol 1076                     i2l173 11D4  
         ___awdiv@counter 002C                     _TMR3H 000FB3                     _TMR3L 000FB2  
                   _PORTD 000F83                     _TRISA 000F92                     _TRISC 000F94  
                   _TRISD 000F95                     _TRISE 000F96                     _tBase 00A3  
           ___awtoft@sign 0033             ___ftpack@sign 002C                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0038  
         __initialization 1552              __end_of_main 0DD0          __end_of_BusyXLCD 1646  
      __size_of_DelayXLCD 0012     __size_of_DelayPORXLCD 0010            ??_SetDDRamAddr 0028  
        __end_of_OpenXLCD 138E            _convertResTemp 0086                    ??_main 007B  
           ___fttol@sign1 0075             __activetblptr 000001             _WriteDataXLCD 1590  
        ?_HighPriorityISR 0001                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _CCPR1L 000FBE          ___awdiv@dividend 0028          ??_LowPriorityISR 0013  
        __end_of___awtoft 167E          __end_of___ftpack 12E6              _DelayPORXLCD 16E8  
                  ___ftge 138E                 ??___awdiv 002C                 ??___ftadd 0072  
               ??___awmod 002C                 ??___ftneg 0033                 ??___ftmul 0034  
               ??___fttol 0070                    clear_0 1578          ___awdiv@quotient 002E  
         ___awmod@divisor 002A           ___awmod@counter 002C            ?_WriteDataXLCD 0001  
   ___ftmul@f3_as_product 0067              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8         __end_of_DelayXLCD 16E8  
              __accesstop 0060   __end_of__initialization 157E                ___ftadd@f1 006C  
              ___ftadd@f2 006F                ___ftge@ff1 0028                ___ftge@ff2 002B  
           ___rparam_used 000001                ___ftneg@f1 0030                ___awtoft@c 0030  
              ___ftmul@f1 0060                ___ftmul@f2 0063                ___fttol@f1 006C  
          __pcstackCOMRAM 0001              __pidataBANK0 1702    __size_of_DelayFor18TCY 000A  
              __pbssBANK0 0083                 ?_BusyXLCD 0001           WriteCmdXLCD@cmd 0028  
    __end_of_SetDDRamAddr 1552                 ?_OpenXLCD 0001                   ?___ftge 0028  
       WriteDataXLCD@data 0028           ??_WriteDataXLCD 0028                 ?___awtoft 0030  
               ?___ftpack 0028        __size_of_putrsXLCD 0034                ??_BusyXLCD 0028  
              _convertRes 0098                _convertPot 0095                ??_OpenXLCD 0029  
                 __Hparam 0000                   __Lparam 0000           __size_of___ftge 0090  
                 ___awdiv 141E             _DelayFor18TCY 16F8                   ___ftadd 0DD0  
                 ___awmod 14A2                   ___ftneg 16B2                   ___ftmul 1076  
                 ___fttol 0F7E              __psmallconst 0800                   __pcinit 1552  
              ??___awtoft 0033                ??___ftpack 002D           putrsXLCD@buffer 0029  
                 __ramtop 0800                   __ptext0 081E                   __ptext1 167E  
                 __ptext2 1590                   __ptext3 0F7E                   __ptext4 16B2  
                 __ptext5 1076                   __ptext6 138E                   __ptext7 0DD0  
                 __ptext8 1646                   __ptext9 1238                   _contRa3 009D  
                 _display 009B                 _T2CONbits 000FCA                 _T3CONbits 000FB1  
        ___awmod@dividend 0028            __pintcode_body 116C      end_of_initialization 157E  
                 int_func 116C            ?_DelayFor18TCY 0001                   postdec1 000FE5  
                 postinc0 000FEE         __end_of_putrsXLCD 16B2                 _PORTCbits 000F82  
               _TRISEbits 000F96     __size_of_SetDDRamAddr 0040  __size_of_HighPriorityISR 1230  
             _CCP1CONbits 000FBD                 _DelayXLCD 16D6               ___ftmul@exp 0066  
          __end_of___ftge 141E              _SetDDRamAddr 1512        SetDDRamAddr@DDaddr 0028  
     start_initialization 1552         __size_of_BusyXLCD 003A                ?_DelayXLCD 0001  
         ??_DelayFor18TCY 0028   __size_of_LowPriorityISR 00BA         __size_of_OpenXLCD 00A8  
                ??___ftge 002E             ?_WriteCmdXLCD 0001               __pdataBANK0 00A3  
       __size_of___awtoft 0038         __size_of___ftpack 00AE             __pcstackBANK0 0060  
       ??_HighPriorityISR 0001                 _flagAdFim 009F                 _main$1496 007D  
               _main$1497 0080                 __pintcode 0008            ??_WriteCmdXLCD 0028  
                ?___awdiv 0028                  ?___ftadd 006C                  ?___awmod 0028  
                ?___ftneg 0030                  ?___ftmul 0060                  ?___fttol 006C  
             __pintcodelo 0018     __end_of_WriteDataXLCD 15CE               __smallconst 0800  
               _convertDc 0083              _sai_cont_ant 0089                  _LATEbits 000F8D  
             ??_DelayXLCD 0028                  _IPR1bits 000F9F                  _IPR2bits 000FA2  
                _PIE1bits 000F9D                  _PIE2bits 000FA0             ?_DelayPORXLCD 0001  
                i2u152_40 11CA                  _PIR1bits 000F9E           OpenXLCD@lcdtype 0029  
                _PIR2bits 000FA1                  _RCONbits 000FD0                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0                 _putrsXLCD 167E  
               copy_data0 1566                  _BusyXLCD 160C            ??_DelayPORXLCD 0028  
                _OpenXLCD 12E6                  __Hrparam 0000            _LowPriorityISR 0018  
                __Lrparam 0000              __Lsmallconst 0800          __size_of___awdiv 0084  
        __size_of___ftadd 01AE          __size_of___awmod 0070          __size_of___ftneg 0024  
        __size_of___ftmul 00F6          __size_of___fttol 00F8                  ___awtoft 1646  
                ___ftpack 1238                ?_putrsXLCD 0029                  __ptext10 14A2  
                __ptext11 141E                  __ptext12 12E6                  __ptext13 15CE  
                __ptext14 1512                  __ptext15 16D6                  __ptext16 16E8  
                __ptext17 160C                  __ptext18 16F8      __end_of_WriteCmdXLCD 160C  
                _erro_ant 008F             __size_of_main 05B2                  _sai_cont 008C  
  __end_of_LowPriorityISR 00D2                  int$flags 0037     __CFG_CPUDIV$OSC1_PLL2 000000  
              _INTCONbits 000FF2           _HighPriorityISR 0008                  intlevel1 0000  
                intlevel2 0000           ?_LowPriorityISR 0001     __end_of_DelayFor18TCY 1702  
    __end_of_DelayPORXLCD 16F8               ??_putrsXLCD 002B  
